/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/category/add": {
    post: operations["addUsingPOST"];
  };
  "/category/addChild": {
    post: operations["addChildUsingPOST"];
  };
  "/category/backendList": {
    get: operations["backendListUsingGET"];
  };
  "/category/children": {
    get: operations["childrenUsingGET"];
  };
  "/category/creatorList": {
    get: operations["creatorListUsingGET"];
  };
  "/category/delete": {
    post: operations["addUsingPOST_1"];
  };
  "/category/edit": {
    post: operations["editUsingPOST"];
  };
  "/category/initFrontCategoryByRelation": {
    get: operations["initFrontCategoryByRelationUsingGET"];
  };
  "/category/initImport": {
    post: operations["initImportUsingPOST"];
  };
  "/category/oneLevelList": {
    post: operations["oneLevelListUsingPOST"];
  };
  "/channel/shop/channelCreators": {
    get: operations["getCreatorsUsingGET"];
  };
  "/channel/shop/pageList": {
    post: operations["pageListUsingPOST"];
  };
  "/channel/shop/sellerListSelect": {
    get: operations["sellerListSelectUsingGET"];
  };
  "/channel/shop/shopListSelect": {
    get: operations["shopListSelectUsingGET"];
  };
  "/clientele/pageList": {
    post: operations["pageListUsingPOST_1"];
  };
  "/common/creators": {
    get: operations["getCreatorsUsingGET_1"];
  };
  "/corporation/corporationList": {
    post: operations["corporationListUsingPOST"];
  };
  "/division/queryDivision": {
    post: operations["queryDivisionInfoUsingPOST"];
  };
  "/file/upload": {
    post: operations["uploadUsingPOST"];
  };
  "/home/statisticsBoard": {
    get: operations["statisticsBoardUsingGET"];
  };
  "/item/getSkuByCodes": {
    post: operations["getSkuByCodesUsingPOST"];
  };
  "/item/pageStoreItem": {
    post: operations["pageStoreItemUsingPOST"];
  };
  "/media/binding/addCategoryBinding": {
    post: operations["addCategoryBindingUsingPOST"];
  };
  "/media/binding/addPropertyBinding": {
    post: operations["addPropertyBindingUsingPOST"];
  };
  "/media/binding/categoryBindingPageList": {
    post: operations["categoryBindingPageListUsingPOST"];
  };
  "/media/binding/deleteCategoryBinding": {
    post: operations["deleteCategoryBindingByIdUsingPOST"];
  };
  "/media/binding/deletePropertyBindingById": {
    post: operations["deletePropertyBindingByIdUsingPOST"];
  };
  "/media/binding/initCategory": {
    post: operations["initCategoryUsingPOST"];
  };
  "/media/binding/initCategoryProperty": {
    post: operations["initCategoryPropertyUsingPOST"];
  };
  "/media/binding/propertyBindingPageList": {
    post: operations["propertyBindingPageListUsingPOST"];
  };
  "/media/binding/queryCategoryCreatorList": {
    post: operations["queryCategoryCreatorListUsingPOST"];
  };
  "/media/binding/queryChannelCategory": {
    get: operations["queryChannelCategoryUsingGET"];
  };
  "/media/binding/queryChannelPropertyList": {
    post: operations["queryChannelPropertyListUsingPOST"];
  };
  "/media/binding/queryExistRelatedChannelCategory": {
    get: operations["queryExistRelatedChannelCategoryUsingGET"];
  };
  "/media/binding/queryExistRelatedChannelProperty": {
    get: operations["queryExistRelatedChannelPropertyUsingGET"];
  };
  "/media/binding/queryExistRelatedPlatformCategory": {
    get: operations["queryExistRelatedPlatformCategoryUsingGET"];
  };
  "/media/binding/queryExistRelatedPlatformProperty": {
    get: operations["queryExistRelatedPlatformPropertyUsingGET"];
  };
  "/media/binding/queryPlatformCategory": {
    get: operations["queryPlatformCategoryUsingGET"];
  };
  "/media/binding/queryPlatformCategoryByTargetCatrgoryId": {
    post: operations["queryPlatformCategoryByTargetCatrgoryIdUsingPOST"];
  };
  "/media/binding/queryPlatformPropertyList": {
    get: operations["queryPlatformPropertyListUsingGET"];
  };
  "/media/binding/queryPropertyCreatorList": {
    post: operations["queryPropertyCreatorListUsingPOST"];
  };
  "/media/binding/updateCategoryBinding": {
    post: operations["updateCategoryBindingUsingPOST"];
  };
  "/media/binding/updatePropertyBinding": {
    post: operations["updatePropertyBindingUsingPOST"];
  };
  "/media/common/platformCodeList": {
    get: operations["platformCodeListUsingGET"];
  };
  "/media/common/publishShopList": {
    get: operations["publishShopListUsingGET"];
  };
  "/media/common/shopAuthStatusList": {
    get: operations["shopAuthStatusListUsingGET"];
  };
  "/media/common/shopPublishErrorCodeList": {
    get: operations["shopPublishErrorCodeListUsingGET"];
  };
  "/media/common/shopStatusList": {
    get: operations["shopStatusListUsingGET"];
  };
  "/media/common/stationList": {
    get: operations["stationListUsingGET"];
  };
  "/media/refluxCategory/addCategoryBinding": {
    post: operations["addCategoryBindingUsingPOST_1"];
  };
  "/media/refluxCategory/addPropertyBinding": {
    post: operations["addPropertyBindingUsingPOST_1"];
  };
  "/media/refluxCategory/categoryBindingPageList": {
    post: operations["categoryBindingPageListUsingPOST_1"];
  };
  "/media/refluxCategory/deleteCategoryBinding": {
    post: operations["deleteCategoryBindingByIdUsingPOST_1"];
  };
  "/media/refluxCategory/deletePropertyBindingById": {
    post: operations["deletePropertyBindingByIdUsingPOST_1"];
  };
  "/media/refluxCategory/propertyBindingPageList": {
    post: operations["propertyBindingPageListUsingPOST_1"];
  };
  "/media/refluxCategory/queryCategoryCreatorList": {
    post: operations["queryCategoryCreatorListUsingPOST_1"];
  };
  "/media/refluxCategory/queryChannelCategory": {
    get: operations["queryChannelCategoryUsingGET_1"];
  };
  "/media/refluxCategory/queryChannelPropertyList": {
    get: operations["queryChannelPropertyListUsingGET"];
  };
  "/media/refluxCategory/queryExistRelatedChannelCategory": {
    get: operations["queryExistRelatedChannelCategoryUsingGET_1"];
  };
  "/media/refluxCategory/queryExistRelatedChannelProperty": {
    get: operations["queryExistRelatedChannelPropertyUsingGET_1"];
  };
  "/media/refluxCategory/queryExistRelatedPlatformCategory": {
    get: operations["queryExistRelatedPlatformCategoryUsingGET_1"];
  };
  "/media/refluxCategory/queryExistRelatedPlatformProperty": {
    get: operations["queryExistRelatedPlatformPropertyUsingGET_1"];
  };
  "/media/refluxCategory/queryPlatformCategory": {
    get: operations["queryPlatformCategoryUsingGET_1"];
  };
  "/media/refluxCategory/queryPlatformCategoryByTargetCatrgoryId": {
    post: operations["queryPlatformCategoryByTargetCatrgoryIdUsingPOST_1"];
  };
  "/media/refluxCategory/queryPlatformPropertyList": {
    get: operations["queryPlatformPropertyListUsingGET_1"];
  };
  "/media/refluxCategory/queryPropertyCreatorList": {
    post: operations["queryPropertyCreatorListUsingPOST_1"];
  };
  "/media/refluxCategory/updateCategoryBinding": {
    post: operations["updateCategoryBindingUsingPOST_1"];
  };
  "/media/refluxCategory/updatePropertyBinding": {
    post: operations["updatePropertyBindingUsingPOST_1"];
  };
  "/nacos/admin": {
    get: operations["readPlatformHtmlUsingGET"];
  };
  "/offlineConsultation/forPage": {
    post: operations["forPageUsingPOST"];
  };
  "/offlineConsultation/updateStatus": {
    post: operations["updateStatusUsingPOST"];
  };
  "/operation/shop/getOperationApprovalShopDetailById": {
    get: operations["getOperationApprovalShopDetailByIdUsingGET"];
  };
  "/operation/shop/getOperationShopDetailById": {
    get: operations["getOperationShopDetailByIdUsingGET"];
  };
  "/operation/shop/operationApprovalShopPageList": {
    post: operations["operationApprovalShopPageListUsingPOST"];
  };
  "/operation/shop/operationShopClose": {
    get: operations["operationShopCloseUsingGET"];
  };
  "/operation/shop/operationShopEnable": {
    get: operations["operationShopEnableUsingGET"];
  };
  "/operation/shop/operationShopPageList": {
    post: operations["operationShopPageListUsingPOST"];
  };
  "/operation/shop/platforms": {
    get: operations["platformsUsingGET"];
  };
  "/operation/shop/shops": {
    post: operations["operationBBShopsUsingPOST"];
  };
  "/operation/shop/updateApprovalStatus": {
    post: operations["updateApprovalStatusUsingPOST"];
  };
  "/order/currencies": {
    get: operations["queryCurrenciesUsingGET"];
  };
  "/order/delete": {
    post: operations["deleteOrderUsingPOST"];
  };
  "/order/detail": {
    get: operations["queryOrderDetailUsingGET"];
  };
  "/order/extend": {
    get: operations["queryOrderExtendUsingGET"];
  };
  "/order/forceCancel": {
    post: operations["forceCancelOrderUsingPOST"];
  };
  "/order/invoice": {
    get: operations["queryOrderInvoiceUsingGET"];
  };
  "/order/listReceipt": {
    get: operations["queryOrderReceiptListUsingGET"];
  };
  "/order/operate/log": {
    get: operations["queryOrderOperateLogUsingGET"];
  };
  "/order/page": {
    post: operations["queryOrderPageUsingPOST"];
  };
  "/order/queryNewOrder": {
    post: operations["queryNewOrderUsingPOST"];
  };
  "/order/revise": {
    post: operations["reviseOrderUsingPOST"];
  };
  "/order/shippingInfo": {
    get: operations["shippingInfoUsingGET"];
  };
  "/order/statistics": {
    get: operations["queryStatusStatisticsUsingGET"];
  };
  "/order/updateOrderFeature": {
    post: operations["updateOrderFeatureUsingPOST"];
  };
  "/order/updateReceiptRecord": {
    post: operations["updateReceiptRecordUsingPOST"];
  };
  "/sell/abolishSellAuth": {
    post: operations["abolishSellAuthUsingPOST"];
  };
  "/sell/applySellAuth": {
    post: operations["applySellAuthUsingPOST"];
  };
  "/sell/bucLogin": {
    post: operations["bucLoginUsingPOST"];
  };
  "/sell/cancelledSellerAuth": {
    post: operations["cancelledSellerAuthUsingPOST"];
  };
  "/sell/getAuthStatus": {
    get: operations["getAuthStatusUsingGET"];
  };
  "/sell/pageList": {
    post: operations["pageListUsingPOST_2"];
  };
  "/sell/queryShopListBySellerId": {
    get: operations["queryShopListBySellerIdUsingGET"];
  };
  "/tradeTerms/getTradeTerm": {
    get: operations["getTradeTermUsingGET"];
  };
  "/tradeTerms/listTradeTerms": {
    post: operations["listTradeTermsUsingPOST"];
  };
  "/user/queryCustomerByAccount": {
    post: operations["queryCustomerByAccountUsingPOST"];
  };
}



export interface definitions {
  /** AbolishSellAuthRequest */
  AbolishSellAuthRequest: {
    /**
     * Format: int64
     * @description 授权id
     */
    bucLoginId: number;
  };
  /** ApiResult */
  ApiResult: {
    code?: string;
    data?: { [key: string]: unknown };
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«BB店铺站点列表返回» */
  "ApiResult«BB店铺站点列表返回»": {
    code?: string;
    data?: definitions["BB店铺站点列表返回"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«CorporationListResponse» */
  "ApiResult«CorporationListResponse»": {
    code?: string;
    data?: definitions["CorporationListResponse"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«CreatorsResponse» */
  "ApiResult«CreatorsResponse»": {
    code?: string;
    data?: definitions["CreatorsResponse"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«EnumResponse»» */
  "ApiResult«List«EnumResponse»»": {
    code?: string;
    data?: definitions["EnumResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«OrderOperateLogDTO»» */
  "ApiResult«List«OrderOperateLogDTO»»": {
    code?: string;
    data?: definitions["OrderOperateLogDTO"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«OrderReceiptRecordResponse»» */
  "ApiResult«List«OrderReceiptRecordResponse»»": {
    code?: string;
    data?: definitions["OrderReceiptRecordResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«QueryChannelCategoryResponse»» */
  "ApiResult«List«QueryChannelCategoryResponse»»": {
    code?: string;
    data?: definitions["QueryChannelCategoryResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«QueryChannelPropertyResponse»» */
  "ApiResult«List«QueryChannelPropertyResponse»»": {
    code?: string;
    data?: definitions["QueryChannelPropertyResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«QueryMultiUserInfoResponse»» */
  "ApiResult«List«QueryMultiUserInfoResponse»»": {
    code?: string;
    data?: definitions["QueryMultiUserInfoResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«QueryPlatformCategoryResponse»» */
  "ApiResult«List«QueryPlatformCategoryResponse»»": {
    code?: string;
    data?: definitions["QueryPlatformCategoryResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«QueryPlatformPropertyResponse»» */
  "ApiResult«List«QueryPlatformPropertyResponse»»": {
    code?: string;
    data?: definitions["QueryPlatformPropertyResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«SellerShopResponse»» */
  "ApiResult«List«SellerShopResponse»»": {
    code?: string;
    data?: definitions["SellerShopResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«ShopPageListDTO»» */
  "ApiResult«List«ShopPageListDTO»»": {
    code?: string;
    data?: definitions["ShopPageListDTO"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«SkuSimpleResponse»» */
  "ApiResult«List«SkuSimpleResponse»»": {
    code?: string;
    data?: definitions["SkuSimpleResponse"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«StationDTO»» */
  "ApiResult«List«StationDTO»»": {
    code?: string;
    data?: definitions["StationDTO"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«string»» */
  "ApiResult«List«string»»": {
    code?: string;
    data?: string[];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«发货单»» */
  "ApiResult«List«发货单»»": {
    code?: string;
    data?: definitions["发货单"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«后台类目返回»» */
  "ApiResult«List«后台类目返回»»": {
    code?: string;
    data?: definitions["后台类目返回"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«地区下拉返回参数»» */
  "ApiResult«List«地区下拉返回参数»»": {
    code?: string;
    data?: definitions["地区下拉返回参数"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«店铺授权状态»» */
  "ApiResult«List«店铺授权状态»»": {
    code?: string;
    data?: definitions["店铺授权状态"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«店铺状态»» */
  "ApiResult«List«店铺状态»»": {
    code?: string;
    data?: definitions["店铺状态"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«List«授权状态»» */
  "ApiResult«List«授权状态»»": {
    code?: string;
    data?: definitions["授权状态"][];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«Map«string,int»» */
  "ApiResult«Map«string,int»»": {
    code?: string;
    data?: { [key: string]: number };
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«OperationGlobalShopApprovalDetailResponse» */
  "ApiResult«OperationGlobalShopApprovalDetailResponse»": {
    code?: string;
    data?: definitions["OperationGlobalShopApprovalDetailResponse"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«OrderInvoiceDTO» */
  "ApiResult«OrderInvoiceDTO»": {
    code?: string;
    data?: definitions["OrderInvoiceDTO"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«ChannelShopPageListResponse»» */
  "ApiResult«PageResponse«ChannelShopPageListResponse»»": {
    code?: string;
    data?: definitions["PageResponse«ChannelShopPageListResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«ClienteleResponse»» */
  "ApiResult«PageResponse«ClienteleResponse»»": {
    code?: string;
    data?: definitions["PageResponse«ClienteleResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«OfflineConsultationSellerResponse»» */
  "ApiResult«PageResponse«OfflineConsultationSellerResponse»»": {
    code?: string;
    data?: definitions["PageResponse«OfflineConsultationSellerResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«OperationGlobalShopPageResponse»» */
  "ApiResult«PageResponse«OperationGlobalShopPageResponse»»": {
    code?: string;
    data?: definitions["PageResponse«OperationGlobalShopPageResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«QueryCategoryBindingListResponse»» */
  "ApiResult«PageResponse«QueryCategoryBindingListResponse»»": {
    code?: string;
    data?: definitions["PageResponse«QueryCategoryBindingListResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«QueryPropertyBindingListResponse»» */
  "ApiResult«PageResponse«QueryPropertyBindingListResponse»»": {
    code?: string;
    data?: definitions["PageResponse«QueryPropertyBindingListResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«SellerResponse»» */
  "ApiResult«PageResponse«SellerResponse»»": {
    code?: string;
    data?: definitions["PageResponse«SellerResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«StoreItemPageResponse»» */
  "ApiResult«PageResponse«StoreItemPageResponse»»": {
    code?: string;
    data?: definitions["PageResponse«StoreItemPageResponse»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«前台类目返回»» */
  "ApiResult«PageResponse«前台类目返回»»": {
    code?: string;
    data?: definitions["PageResponse«前台类目返回»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«订单详情»» */
  "ApiResult«PageResponse«订单详情»»": {
    code?: string;
    data?: definitions["PageResponse«订单详情»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PageResponse«运营BB店铺列表详情返回»» */
  "ApiResult«PageResponse«运营BB店铺列表详情返回»»": {
    code?: string;
    data?: definitions["PageResponse«运营BB店铺列表详情返回»"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«PlatformCustomerResponse» */
  "ApiResult«PlatformCustomerResponse»": {
    code?: string;
    data?: definitions["PlatformCustomerResponse"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«TradeTermListResponse» */
  "ApiResult«TradeTermListResponse»": {
    code?: string;
    data?: definitions["TradeTermListResponse"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«TradeTermResponse» */
  "ApiResult«TradeTermResponse»": {
    code?: string;
    data?: definitions["TradeTermResponse"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«boolean» */
  "ApiResult«boolean»": {
    code?: string;
    data?: boolean;
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«long» */
  "ApiResult«long»": {
    code?: string;
    /** Format: int64 */
    data?: number;
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«string» */
  "ApiResult«string»": {
    code?: string;
    data?: string;
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«前台子类目列表返回» */
  "ApiResult«前台子类目列表返回»": {
    code?: string;
    data?: definitions["前台子类目列表返回"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«文件信息表» */
  "ApiResult«文件信息表»": {
    code?: string;
    data?: definitions["文件信息表"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«订单扩展信息» */
  "ApiResult«订单扩展信息»": {
    code?: string;
    data?: definitions["订单扩展信息"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApiResult«订单详情» */
  "ApiResult«订单详情»": {
    code?: string;
    data?: definitions["订单详情"];
    msg?: string;
    success?: boolean;
    traceId?: string;
  };
  /** ApplyAuthRequest */
  ApplyAuthRequest: {
    /**
     * Format: int64
     * @description 卖家名称
     */
    sellerId?: number;
  };
  /**
   * BB店铺站点列表返回
   * @description BB店铺站点列表返回
   */
  BB店铺站点列表返回: {
    /** @description BB店铺站点列表 */
    platforms?: definitions["BB店铺站点返回"][];
  };
  /**
   * BB店铺站点返回
   * @description BB店铺站点返回
   */
  BB店铺站点返回: {
    /** @description 站点code */
    code?: string;
    /** @description 站点名称 */
    name?: string;
  };
  /** ChannelShopPageListResponse */
  ChannelShopPageListResponse: {
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /** @description 创建人 */
    creator?: string;
    /**
     * Format: int64
     * @description 创建人
     */
    creatorId?: number;
    /** @description 其他信息 拓展 */
    extend?: definitions["ShopExtend"];
    /** @description 平台 */
    platformCode?: string;
    /** @description 卖家id */
    sellerId?: string;
    /** @description 卖家名称 */
    sellerName?: string;
    /**
     * Format: int64
     * @description 门店id
     */
    shopId?: number;
    /** @description 门店名称 */
    shopName?: string;
    /** @description 站点 */
    stationCode?: string;
    /**
     * Format: int32
     * @description 店铺状态 1 启用 2 禁用
     */
    status?: number;
  };
  /** ClienteleResponse */
  ClienteleResponse: {
    /**
     * Format: int64
     * @description 客户id
     */
    buyerId?: number;
    /**
     * @description 邮箱地址
     * @example 123456789@qq.com
     */
    email?: string;
    /** @description 头像信息 */
    headImg?: string;
    /**
     * Format: int64
     * @description 数量
     */
    orderQuantity?: number;
    /**
     * @description 用户手机号
     * @example 1523548521
     */
    phoneNumber?: string;
    /**
     * @description 备注
     * @example 备注
     */
    remark?: string;
    /** @description 总金额 */
    saleTotal?: number;
    /**
     * @description 客户姓名
     * @example 张三
     */
    userRealName?: string;
    /**
     * @description 门店名称
     * @example 老马百货
     */
    userShopName?: string;
  };
  /**
   * CorporationListResponse
   * @description CorporationListResponse
   */
  CorporationListResponse: {
    /** @description 主体列表 */
    corporations?: definitions["CorporationResponse"][];
  };
  /**
   * CorporationResponse
   * @description CorporationResponse
   */
  CorporationResponse: {
    /** @description 主体名称 */
    corporationName?: string;
    /** @description 主体编码 */
    corporationNo?: string;
    /**
     * Format: int64
     * @description 主体id
     * @example 1
     */
    id?: number;
  };
  /**
   * CreatorResponse
   * @description 商品-属性-分类-品牌等创建人
   */
  CreatorResponse: {
    /**
     * Format: int64
     * @description 创建人ID
     */
    userId?: number;
    /** @description 创建人姓名 */
    userName?: string;
  };
  /**
   * CreatorsResponse
   * @description 创建人
   */
  CreatorsResponse: {
    /** @description 创建人列表 */
    creators?: definitions["CreatorResponse"][];
  };
  /**
   * CustomerAccountRequest
   * @description 查询店铺客户
   */
  CustomerAccountRequest: {
    /**
     * @description 通过用户名/手机号码/邮箱精确查询用户
     * @example 张三
     */
    account?: string;
  };
  /** DeleteOrderRequest */
  DeleteOrderRequest: {
    /** @description 语言 */
    language?: string;
    /**
     * Format: int64
     * @description 操作人Id
     */
    operateUserId?: number;
    /**
     * Format: int64
     * @description 操作卖家id
     */
    operatorSellerId?: number;
    /**
     * Format: int64
     * @description 操作买家id
     */
    operatorUserId?: number;
    /** @description orderNo */
    orderNo?: string;
    /**
     * Format: int32
     * @description 所属平台：1:BGB 2:CRM 3:SCM
     */
    platformId?: number;
  };
  /** EnumResponse */
  EnumResponse: {
    label?: string;
    value?: string;
  };
  /** ForceCancelOrderRequest */
  ForceCancelOrderRequest: {
    /** @description 语言 */
    language?: string;
    /**
     * Format: int64
     * @description 操作人Id
     */
    operateUserId?: number;
    /**
     * Format: int64
     * @description 操作卖家id
     */
    operatorSellerId?: number;
    /**
     * Format: int64
     * @description 操作买家id
     */
    operatorUserId?: number;
    /** @description orderNo */
    orderNo?: string;
    /**
     * Format: int32
     * @description 所属平台：1:BGB 2:CRM 3:SCM
     */
    platformId?: number;
  };
  /** InvoiceCompany */
  InvoiceCompany: {
    /** @description 省市区加上地址详情 */
    addressCompleteAddress?: string;
    /** @description 银行账号 */
    bankAccount?: string;
    /** @description 银行名称 */
    bankName?: string;
    /** @description 市编码 */
    cityCode?: string;
    /** @description 市名称 */
    cityName?: string;
    /** @description 国家编码 */
    countryCode: string;
    /** @description 国家名 */
    countryName?: string;
    /** @description 地址详情 */
    detail: string;
    /** @description 区编码 */
    districtCode?: string;
    /** @description 区名称 */
    districtName?: string;
    /** @description 公司名称/开票人姓名 */
    drawer?: string;
    /** @description 门牌号 */
    houseNumber?: string;
    /** @description 邮箱、收件人信息 */
    invoiceLocation?: definitions["InvoiceLocation"];
    /**
     * Format: int32
     * @description 开票类型 1 税发票 2 账单
     */
    invoiceType?: number;
    /** @description 公司名 */
    name?: string;
    /** @description 邮编 */
    postalCode?: string;
    /** @description 省编码 */
    provinceCode?: string;
    /** @description 省名称 */
    provinceName?: string;
    /** @description 街道编码 */
    streetCode?: string;
    /** @description 街道名称 */
    streetName?: string;
    /** @description 税号 */
    taxNo?: string;
    /** @description 公司电话 */
    tel?: string;
  };
  /** InvoiceFileDTO */
  InvoiceFileDTO: {
    /** @description 发票金额 */
    invoiceAmount: string;
    /** @description 多pdf地址url */
    invoicePDFList: definitions["InvoicePDF"][];
    /**
     * Format: int32
     * @description 排序
     */
    sort?: number;
    /**
     * Format: int64
     * @description 上传时间
     */
    uploadTime?: number;
  };
  /** InvoiceLocation */
  InvoiceLocation: {
    /** @description 市编码 */
    cityCode?: string;
    /** @description 市名称 */
    cityName?: string;
    /** @description 详细地址 */
    detailedAddress?: string;
    /** @description 区编码 */
    districtCode?: string;
    /** @description 区名称 */
    districtName?: string;
    /** @description 电子邮箱地址 */
    invoiceEmail?: string;
    /** @description 省编码 */
    provinceCode?: string;
    /** @description 省名称 */
    provinceName?: string;
    /** @description 收件人姓名 */
    recipients?: string;
    /** @description 收货人地址 省市区加详细地址 */
    recipientsCompleteAddress?: string;
    /** @description 收件人手机号 */
    recipientsPhone?: string;
    /** @description 备注 */
    remark?: string;
  };
  /** InvoicePDF */
  InvoicePDF: {
    /** @description 图片url */
    imageUrl?: string;
    /**
     * Format: int32
     * @description 排序
     */
    sort: number;
    /** @description 原图(可能是pdf) */
    url: string;
  };
  /** Map«string,int» */
  "Map«string,int»": { [key: string]: definitions };
  /** Money */
  Money: {
    /** Format: int64 */
    cent?: number;
    currencyCode?: string;
    origin?: number;
  };
  /** Node */
  Node: {
    children?: definitions["Node"][];
    disabledDesc?: string;
    enabled?: boolean;
    key?: string;
    memo?: string;
    value?: string;
  };
  /** Nodes */
  Nodes: {
    nodes?: definitions["Node"][];
  };
  /**
   * OfflineConsultationPageSellerRequest
   * @description 离线咨询信息分页请求参数
   */
  OfflineConsultationPageSellerRequest: {
    /**
     * Format: int32
     * @description 问题类型:1.平台问题，2.入驻问题，3.采购咨询，4.物流咨询，5.其他
     */
    consultType?: number;
    /** @description 所在国家 */
    country?: string;
    /** @description 联系邮箱 */
    email?: string;
    /** @description 提问姓名 */
    questioner?: string;
    /**
     * Format: int32
     * @description 状态：1.新、2.跟进中、3.已完结
     */
    status?: number;
    /** @description 联系电话 */
    telephone?: string;
  };
  /**
   * OfflineConsultationSellerResponse
   * @description 离线详情列表响应结果
   */
  OfflineConsultationSellerResponse: {
    /** @description 问题类型:1.平台问题，2.入驻问题，3.采购咨询，4.物流咨询，5.其他 */
    consultTypeStr?: string;
    /** @description 咨询内容 */
    context?: string;
    /** @description 所在国家 */
    country?: string;
    /**
     * Format: int64
     * @description 创建时间戳(毫秒)
     */
    createTime?: number;
    /** @description 联系邮箱 */
    email?: string;
    /**
     * Format: int64
     * @description 主键Id
     */
    id?: number;
    /** @description 提问姓名 */
    questioner?: string;
    /** @description 回复内容 */
    response?: string;
    /**
     * Format: int32
     * @description 状态：1.新、2.跟进中、3.已完结
     */
    status?: number;
    /** @description 联系电话 */
    telephone?: string;
  };
  /**
   * OfflineConsultationUpdateStatusRequest
   * @description 更新离线咨询信息请求参数
   */
  OfflineConsultationUpdateStatusRequest: {
    /**
     * Format: int64
     * @description 主键Id
     */
    id?: number;
    /** @description 回复内容 */
    response?: string;
    /**
     * Format: int32
     * @description 状态：1.新、2.跟进中、3.已完结
     */
    status?: number;
  };
  /**
   * OperationGlobalShopApprovalDetailResponse
   * @description 开店审核查看详情响应对象
   */
  OperationGlobalShopApprovalDetailResponse: {
    /** @description 收款地址 */
    accountAddress?: string;
    /** @description 收款国家地区 */
    accountCountry?: string;
    /** @description 收款户名 */
    accountName?: string;
    /** @description 收款账号 */
    accountNumber?: string;
    /** @description 银行地址 */
    bankAddress?: string;
    /** @description 银行代号 */
    bankCode?: string;
    /** @description 收款银行 */
    bankName?: string;
    /**
     * Format: int64
     * @description 主键id
     */
    id?: number;
    /** @description 国家地区 */
    shopCountry?: string;
    /** @description 店铺名称 */
    shopName?: string;
    /**
     * Format: int32
     * @description 状态
     */
    status?: number;
    /** @description SwitchCode */
    switchCode?: string;
  };
  /**
   * OperationGlobalShopApprovalRequest
   * @description 运营后台-修改审核状态请求参数
   */
  OperationGlobalShopApprovalRequest: {
    /** @description 审核通过状态（true:通过，false：驳回） */
    flag?: boolean;
    /**
     * Format: int64
     * @description 主键Id
     */
    id?: number;
    /** @description 驳回理由 */
    rejectionReason?: string;
  };
  /**
   * OperationGlobalShopPageRequest
   * @description 运营后台-开店审核分页查询请求参数
   */
  OperationGlobalShopPageRequest: {
    /** Format: int32 */
    current?: number;
    openPage?: boolean;
    /** @description 站点 */
    platform?: string;
    /** @description 店铺名称 */
    shopName?: string;
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    start?: number;
  };
  /**
   * OperationGlobalShopPageResponse
   * @description 运营后台-开店审核分页查询响应参数
   */
  OperationGlobalShopPageResponse: {
    /** @description 申请时间 */
    applyDate?: string;
    /**
     * Format: int64
     * @description 主键id
     */
    id?: number;
    /** @description 站点 */
    platform?: string;
    /** @description 卖家账号 */
    sellerAccount?: string;
    /** @description 店铺编号 */
    shopCode?: string;
    /** @description 国家地区 */
    shopCountry?: string;
    /** @description 店铺名称 */
    shopName?: string;
    /**
     * Format: int32
     * @description 状态
     */
    status?: number;
  };
  /** OrderCreateTimeSortDTO */
  OrderCreateTimeSortDTO: {
    /** Format: int32 */
    createTimeOrder?: number;
    /** Format: int32 */
    createTimeSort?: number;
    /**
     * Format: int64
     * @description orderId起始范围
     */
    orderIdExcludeStart?: number;
    /** Format: int32 */
    orderIdOrder?: number;
    /** Format: int32 */
    orderIdSort?: number;
  };
  /** OrderFeaturesCmdRequest */
  OrderFeaturesCmdRequest: {
    baseExtend?: definitions["订单扩展参数"];
    bizFeatures?: { [key: string]: string };
    buyerRemark?: string;
    /** Format: int32 */
    childStatus?: number;
    /** @description 语言 */
    language?: string;
    /**
     * Format: int64
     * @description 操作卖家id
     */
    operatorSellerId?: number;
    /**
     * Format: int64
     * @description 操作买家id
     */
    operatorUserId?: number;
    /** @description 订单号 */
    orderNo: string;
    /**
     * Format: int32
     * @description 所属平台：1:BGB 2:CRM 3:SCM
     */
    platformId?: number;
    sellerRemark?: string;
  };
  /** OrderInvoiceDTO */
  OrderInvoiceDTO: {
    /** @description 省市区加上地址详情 */
    addressCompleteAddress?: string;
    /**
     * Format: int64
     * @description 申请开票时间
     */
    applyTime?: number;
    /** @description 银行账号 */
    bankAccount?: string;
    /** @description 银行名称 */
    bankName?: string;
    /**
     * Format: int64
     * @description 买家ID
     */
    buyerId?: number;
    /** @description 存在换开的发票信息 */
    changeInvoice?: definitions["OrderInvoiceDTO"];
    /** @description 市编码 */
    cityCode?: string;
    /** @description 市名称 */
    cityName?: string;
    /** @description 国家编码 */
    countryCode: string;
    /** @description 国家名 */
    countryName?: string;
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /** @description 币种 */
    currency?: string;
    /** @description 地址详情 */
    detail: string;
    /** @description 区编码 */
    districtCode?: string;
    /** @description 区名称 */
    districtName?: string;
    /** @description 公司名称/开票人姓名 */
    drawer?: string;
    /** @description 门牌号 */
    houseNumber?: string;
    /** Format: int64 */
    id?: number;
    /**
     * Format: int64
     * @description 开票金额
     */
    invoiceAmount?: number;
    invoiceAmountYuan?: string;
    /** @description 发票内容(账单 url)pdf */
    invoiceContent?: string;
    /** @description 发票内容(账单 url)图片 */
    invoiceContentImg?: string;
    /** @description 发票文件细节 */
    invoiceFileList?: definitions["InvoiceFileDTO"][];
    /** @description 发票文件名 */
    invoiceFileName?: string;
    /** @description 发票文件地址 json */
    invoiceFileUrl?: string;
    /** @description 发票url 集合(app/店铺 预览用) */
    invoiceFileUrls?: string[];
    /** @description 邮箱、收件人信息 */
    invoiceLocation?: definitions["InvoiceLocation"];
    /**
     * Format: int32
     * @description 审核状态
     */
    invoiceStatus?: number;
    /**
     * Format: int32
     * @description 开票类型 1 税发票 2 账单
     */
    invoiceType?: number;
    /** @description 公司名 */
    name?: string;
    /** @description 订单号 */
    orderNo?: string;
    /** @description 邮编 */
    postalCode?: string;
    /** @description 预览账单 url */
    previewInvoiceContent?: string;
    /** @description 省编码 */
    provinceCode?: string;
    /** @description 省名称 */
    provinceName?: string;
    /** @description 驳回原因 */
    reasonMsg?: string;
    /**
     * Format: int64
     * @description 店铺ID
     */
    shopId?: number;
    /** @description 街道编码 */
    streetCode?: string;
    /** @description 街道名称 */
    streetName?: string;
    /** @description 税号 */
    taxNo?: string;
    /** @description 公司电话 */
    tel?: string;
    /**
     * Format: int64
     * @description 上传时间
     */
    uploadTime?: number;
  };
  /** OrderOperateLogDTO */
  OrderOperateLogDTO: {
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /** @description 操作描述 */
    operationDesc?: string;
    /** @description 操作人名字 */
    operatorName?: string;
    /**
     * Format: int32
     * @description 操作人类型:0系统1买家2卖家
     */
    operatorType?: number;
    /** @description 订单状态描述 */
    orderStatusDesc?: string;
  };
  /** OrderPageRequest */
  OrderPageRequest: {
    /** @description 申请区域编码ID */
    applyAreaCode?: string;
    /** @description 申请国家编码ID */
    applyCountryCode?: string;
    bizExtend?: { [key: string]: string };
    /** @description BUYER_SUBMIT_ORDER:自助下单   SELLER_PROXY_SUBMIT_ORDER:待客下单 */
    bizScene?: string;
    /** @description 业务类型 1自营采销 2以销定采 */
    bm?: string;
    /** @description 转发货异常编码 */
    businessErrorCode?: string;
    /** @description 转发货异常编码列表 */
    businessErrorCodeList?: string[];
    /**
     * Format: int64
     * @description 买家ID
     */
    buyerId?: number;
    buyerIdList?: number[];
    /** @description 买家名称 */
    buyerName?: string;
    /** @description 是否货到付款 是-true 否-false */
    cashOnDelivery?: boolean;
    /** @description 子状态 */
    childStatusList?: number[];
    /** @description 客户端：GBG SCM CRM BB SCM_IN */
    clientType?: string;
    /**
     * Format: int32
     * @description 跨境交易类型
     */
    crossTradeType?: number;
    /**
     * Format: int64
     * @description cspuId
     */
    cspuId?: number;
    /**
     * Format: int32
     * @description 当前页码
     */
    current?: number;
    /** @description 是否开启SCM */
    enSCM?: boolean;
    /** @description 发货 */
    fulfillmentStatusList?: number[];
    /** @description 是否开票 */
    hasInvoice?: boolean;
    /** @description 当 orderStatus为104 时 需要包含待处理转发货订单 用 orderStatusList：104,103 */
    includeWH?: boolean;
    /** @description 国际条码 */
    internationalCode?: string;
    /** @description 国际条形码列表 */
    internationalCodeList?: string[];
    /** @description 语言 */
    language?: string;
    /** @description OCP物流接单号 */
    logisticsOrderId?: string;
    /**
     * Format: int32
     * @description 物流类型：4平台履约 2卖家履约
     */
    logisticsType?: number;
    /**
     * Format: int64
     * @description 操作卖家id
     */
    operatorSellerId?: number;
    /**
     * Format: int32
     * @description 系统0 买家1 卖家2,废弃
     */
    operatorType?: number;
    /**
     * Format: int64
     * @description 操作买家id
     */
    operatorUserId?: number;
    orderAsc?: string;
    orderBy?: string;
    /** @description 是否只统计订单 */
    orderCount?: boolean;
    /**
     * Format: int32
     * @description 开票状态
     */
    orderInvoiceStatus?: number;
    /**
     * Format: int32
     * @description 开票类型
     */
    orderInvoiceType?: number;
    /** @description 订单号 */
    orderNo?: string;
    /** @description 订单号列表 */
    orderNoList?: string[];
    /**
     * Format: int32
     * @description 订单状态
     */
    orderStatus?: number;
    /** @description 订单状态集合 */
    orderStatusList?: number[];
    /** @description 订单类型 */
    orderTypes?: number[];
    /**
     * Format: int64
     * @description 三方下单时间
     */
    outOrderTimeEnd?: number;
    /**
     * Format: int64
     * @description 三方下单时间
     */
    outOrderTimeStart?: number;
    /** @description 三方skuId */
    outSkuId?: string;
    /** @description 三方单号 */
    outTradeNo?: string;
    /**
     * Format: int32
     * @description 支付状态
     */
    payStatus?: number;
    /** @description 支付状态集合 */
    payStatusList?: number[];
    /** @description 付款类型：1先款后货 2分批付款 3先货后款 */
    paymentType?: string;
    /**
     * Format: int32
     * @description 所属平台：1:BGB 2:CRM 3:SCM
     */
    platformId?: number;
    /** @description 商品名 */
    product?: string;
    /**
     * Format: int64
     * @description 商品ID
     */
    productId?: number;
    /**
     * Format: int32
     * @description 请求来源
     */
    requestFrom?: number;
    /**
     * Format: int64
     * @description 卖家ID
     */
    sellerId?: number;
    sellerIdList?: number[];
    /** @description 发货国家编码ID */
    shipCountryCode?: string;
    /** @description 店铺名 */
    shop?: string;
    /**
     * Format: int64
     * @description 店铺ID
     */
    shopId?: number;
    shopIdList?: number[];
    /** @description 店铺名称集合 */
    shopNameList?: string[];
    /** @description 站点名称集合 */
    siteList?: string[];
    /**
     * Format: int32
     * @description 单页数量
     */
    size?: number;
    /** @description SKU 编码 */
    skuCode?: string;
    /** @description SKU 编码列表 */
    skuCodeList?: string[];
    /**
     * Format: int64
     * @description SKU ID
     */
    skuId?: number;
    /** @description SKU 名称 */
    skuName?: string;
    /** @description 排序规则，一次只能选择一个 */
    sort?: definitions["OrderPageSortDTO"];
    /**
     * Format: int64
     * @description 跟单人
     */
    submitUserId?: number;
    /** @description 订单标签 */
    tagList?: string[];
    /**
     * Format: int64
     * @description 结束时间
     */
    timeEnd?: number;
    /**
     * Format: int64
     * @description 开始时间
     */
    timeStart?: number;
    /** @description 三方单号列表 */
    tpOrderNoList?: string[];
    /** @description 贸易方式 1:国内贸易,2:跨境贸易,3:一般贸易 */
    tradeMode?: string;
    /** @description 交易平台 */
    tradePlatform?: string;
    /** @description 发货仓编码列表 */
    warehouseCodeList?: string[];
  };
  /** OrderPageSortDTO */
  OrderPageSortDTO: {
    /** @description 订单根据创建时间深分页 */
    createTimeSort?: definitions["OrderCreateTimeSortDTO"];
  };
  /** OrderPromotionDetailDto */
  OrderPromotionDetailDto: {
    discountFee?: definitions["Money"];
    promotionId?: string;
    /** Format: int32 */
    promotionType?: number;
    promotionTypeName?: string;
  };
  /** OrderReceiptRecordResponse */
  OrderReceiptRecordResponse: {
    bankAccountNo?: string;
    /** @description 银行手续费 (元) */
    bankFeeAmountYuan?: string;
    buyerName?: string;
    /** Format: int64 */
    createTime?: number;
    /** Format: int64 */
    id?: number;
    /**
     * Format: int64
     * @description 订单金额
     */
    orderAmount?: number;
    /** @description 订单金额 */
    orderAmountMoney?: definitions["Money"];
    /** @description 订单金额-元 */
    orderAmountYuan?: string;
    /** Format: int64 */
    orderId?: number;
    orderNo?: string;
    /** Format: int64 */
    orderPaymentId?: number;
    /**
     * Format: int64
     * @description 付款金额
     */
    payAmount?: number;
    /** @description 付款金额 */
    payAmountMoney?: definitions["Money"];
    /** @description 付款金额-元 */
    payAmountYuan?: string;
    /** Format: int64 */
    payTime?: number;
    paymentProof?: string;
    paymentProofs?: string[];
    /** Format: int32 */
    paymentStatus?: number;
    /** @description 实际到账金额 */
    realPayAmountMoney?: definitions["Money"];
    /** @description 实际到账金额 (元) */
    realPayAmountYuan?: string;
    /** Format: int64 */
    realPayTime?: number;
    /**
     * Format: int64
     * @description 收款金额
     */
    receiptAmount?: number;
    /** @description 收款金额-元 */
    receiptAmountYuan?: string;
    /** Format: int32 */
    receiptMethod?: number;
    sellerName?: string;
    serialNumber?: string;
  };
  /** PageResponse«ChannelShopPageListResponse» */
  "PageResponse«ChannelShopPageListResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["ChannelShopPageListResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«ClienteleResponse» */
  "PageResponse«ClienteleResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["ClienteleResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«OfflineConsultationSellerResponse» */
  "PageResponse«OfflineConsultationSellerResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["OfflineConsultationSellerResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«OperationGlobalShopPageResponse» */
  "PageResponse«OperationGlobalShopPageResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["OperationGlobalShopPageResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«QueryCategoryBindingListResponse» */
  "PageResponse«QueryCategoryBindingListResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["QueryCategoryBindingListResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«QueryPropertyBindingListResponse» */
  "PageResponse«QueryPropertyBindingListResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["QueryPropertyBindingListResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«SellerResponse» */
  "PageResponse«SellerResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["SellerResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«StoreItemPageResponse» */
  "PageResponse«StoreItemPageResponse»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["StoreItemPageResponse"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«前台类目返回» */
  "PageResponse«前台类目返回»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["前台类目返回"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«订单详情» */
  "PageResponse«订单详情»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["订单详情"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PageResponse«运营BB店铺列表详情返回» */
  "PageResponse«运营BB店铺列表详情返回»": {
    /** Format: int32 */
    current?: number;
    extra?: { [key: string]: unknown };
    hasNext?: boolean;
    hasPre?: boolean;
    /** Format: int32 */
    pages?: number;
    records?: definitions["运营BB店铺列表详情返回"][];
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    total?: number;
  };
  /** PlaceOrderLineCombinationSkuDTO */
  PlaceOrderLineCombinationSkuDTO: {
    /**
     * Format: int64
     * @description 关联组合商品的 ItemId
     */
    combinationItemId: number;
    /**
     * Format: int64
     * @description 组合数量
     */
    combinationSize: number;
    /**
     * Format: int64
     * @description 关联组合商品的 SkuId
     */
    combinationSkuId: number;
    /**
     * Format: int32
     * @description 是否是组合商品
     */
    combinationType?: number;
    /**
     * Format: int32
     * @description 是否是组合商品的主商品
     */
    isMasterSku: number;
  };
  /**
   * PlatformCustomerResponse
   * @description 平台店铺用户出参
   */
  PlatformCustomerResponse: {
    /** @description 邮箱 */
    email?: string;
    /** @description 用户手机号 */
    phone?: string;
    /**
     * Format: int64
     * @description 用户id
     * @example 1
     */
    userId?: number;
    /** @description 用户名 */
    userName?: string;
    /** @description 用户昵称 */
    userRealName?: string;
  };
  /** PointAcquireSku */
  PointAcquireSku: {
    /**
     * Format: int64
     * @description 用户可获得积分
     */
    acquirePoint?: number;
    /** @description 获得积分比例 */
    acquireRatio?: number;
    /** @description 商品金额(优惠后) */
    goodsAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 购买数量
     */
    quantity?: number;
    /**
     * Format: int64
     * @description skuId
     */
    skuId?: number;
    /** @description 图片 */
    skuImgUrl?: string;
    /** @description 商品名称 */
    skuName?: string;
  };
  /** QueryCategoryBindingListResponse */
  QueryCategoryBindingListResponse: {
    /**
     * Format: int64
     * @description 类目关联id
     */
    categoryRelationId?: number;
    /**
     * Format: int64
     * @description 渠道内部类目id
     */
    channelCategoryId?: number;
    /** @description 渠道类目名称 */
    channelCategoryName?: string;
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /**
     * Format: int64
     * @description 创建人id
     */
    creatorId?: number;
    /** @description 创建人名称 */
    creatorName?: string;
    /** @description 渠道类目id */
    outerCategoryId?: string;
    /** @description 关联渠道平台 */
    platform?: string;
    /** @description 平台类目中文名称 */
    sourceCategoryChineseName?: string;
    /** @description 平台类目英文名称 */
    sourceCategoryEnglishName?: string;
    /**
     * Format: int64
     * @description 平台类目id
     */
    sourceCategoryId?: number;
  };
  /** QueryChannelCategoryResponse */
  QueryChannelCategoryResponse: {
    /** @description 下级类目 */
    categories?: definitions["QueryChannelCategoryResponse"][];
    /** @description 渠道类目名称 */
    categoryName?: string;
    /**
     * Format: int64
     * @description 渠道内部类目id
     */
    channelCategoryId?: number;
    /** @description 是否可选 */
    disabled?: boolean;
    /**
     * Format: int32
     * @description 层级
     */
    level?: number;
    /**
     * Format: int64
     * @description 渠道类目id
     */
    outerCategoryId?: number;
    /**
     * Format: int64
     * @description 上级id
     */
    parentId?: number;
  };
  /** QueryChannelPropertyResponse */
  QueryChannelPropertyResponse: {
    /**
     * Format: int64
     * @description 渠道内部属性id
     */
    channelPropertyId?: number;
    /** @description 是否可选 */
    disabled?: boolean;
    /** @description 渠道属性id */
    outerPropertyId?: string;
    /** @description 渠道属性名称 */
    propertyName?: string;
  };
  /** QueryClienteleRequest */
  QueryClienteleRequest: {
    /**
     * Format: int32
     * @description 当前页码
     * @example 1
     */
    current?: number;
    /**
     * @description 邮箱地址
     * @example 123456789@qq.com
     */
    email?: string;
    /**
     * @description 用户手机号
     * @example 1523548521
     */
    phoneNumber?: string;
    /**
     * Format: int32
     * @description 请求数据量
     * @example 10
     */
    size?: number;
    /**
     * @description 客户姓名
     * @example 张三
     */
    userRealName?: string;
    /**
     * @description 门店名称
     * @example 老马百货
     */
    userShopName?: string;
  };
  /** QueryDivisionRequest */
  QueryDivisionRequest: {
    /**
     * Format: int64
     * @description 国别id
     */
    countryId?: number;
    /**
     * Format: int64
     * @description 父级区划id
     */
    parentId?: number;
  };
  /** QueryExistRelatedCategoryRequest */
  QueryExistRelatedCategoryRequest: {
    /** @description 渠道类目id */
    outerCategoryId?: string;
  };
  /** QueryMultiUserInfoResponse */
  QueryMultiUserInfoResponse: {
    /**
     * Format: int64
     * @description 用户id
     */
    userId?: number;
    /** @description 用户名 */
    userName?: string;
    /** @description 用户昵称 */
    userRealName?: string;
  };
  /** QueryPlatformCategoryResponse */
  QueryPlatformCategoryResponse: {
    /** @description 下级类目 */
    categories?: definitions["QueryPlatformCategoryResponse"][];
    /** @description 中文类目名称 */
    categoryNameChinese?: string;
    /** @description 英文类目名称 */
    categoryNameEnglish?: string;
    /** @description 是否可选 */
    disabled?: boolean;
    /**
     * Format: int32
     * @description 层级
     */
    level?: number;
    /**
     * Format: int64
     * @description 上级id
     */
    parentId?: number;
    /**
     * Format: int64
     * @description 平台类目id
     */
    platformCategoryId?: number;
  };
  /** QueryPlatformPropertyResponse */
  QueryPlatformPropertyResponse: {
    /** @description 是否可选 */
    disabled?: boolean;
    /**
     * Format: int64
     * @description 平台属性id
     */
    platformPropertyId?: number;
    /** @description 中文属性名称 */
    propertyNameChinese?: string;
    /** @description 英文属性名称 */
    propertyNameEnglish?: string;
  };
  /** QueryPropertyBindingListResponse */
  QueryPropertyBindingListResponse: {
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /**
     * Format: int64
     * @description 创建人id
     */
    creatorId?: number;
    /** @description 创建人名称 */
    creatorName?: string;
    /** @description 渠道属性id */
    outerPropertyId?: string;
    /** @description 渠道平台 */
    platform?: string;
    /**
     * Format: int64
     * @description 属性关联id
     */
    propertyRelationId?: number;
    /** @description 平台属性中文名称 */
    sourcePropertyChineseName?: string;
    /** @description 平台属性英文名称 */
    sourcePropertyEnglishName?: string;
    /**
     * Format: int64
     * @description 平台属性id
     */
    sourcePropertyId?: number;
    /**
     * Format: int64
     * @description 渠道内部属性id
     */
    targetPropertyId?: number;
    /** @description 渠道属性名称 */
    targetPropertyName?: string;
  };
  /** QuerySellRequest */
  QuerySellRequest: {
    /** @description 授权状态 */
    authState?: string;
    /**
     * Format: int64
     * @description 创建时间结束
     */
    createTimeEnd?: number;
    /**
     * Format: int64
     * @description 创建时间开始
     */
    createTimeStart?: number;
    /**
     * Format: int32
     * @description 页号
     */
    current?: number;
    /** @description 店铺名称 */
    sellerName?: string;
    /** @description 卖家类型 1：品牌供应商 2：自营卖家 */
    sellerType?: string;
    /**
     * Format: int32
     * @description 条数
     */
    size?: number;
  };
  /** QueryShopRequest */
  QueryShopRequest: {
    /**
     * Format: int32
     * @description 授权状态 3 授权成功 4 授权失败
     */
    authStatus?: number;
    /**
     * Format: int64
     * @description 结束时间
     */
    createTimeEnd?: number;
    /**
     * Format: int64
     * @description 开始时间
     */
    createTimeStart?: number;
    /**
     * Format: int64
     * @description 创建人id
     */
    creatorId?: number;
    /**
     * Format: int32
     * @description 当前页码
     * @example 1
     */
    current?: number;
    /** @description 平台code */
    platformCode?: string;
    /**
     * Format: int64
     * @description 卖家id
     */
    sellerId?: number;
    /** @description 店铺名称 */
    shopName?: string;
    /**
     * Format: int32
     * @description 请求数据量
     * @example 10
     */
    size?: number;
    /** @description 站点code */
    stationCode?: string;
    /**
     * Format: int32
     * @description 店铺状态 1 启用 2 禁用
     */
    status?: number;
    /** @description 创建人 */
    userRealName?: string;
  };
  /** QuerySkuWholesalePriceDTO */
  QuerySkuWholesalePriceDTO: {
    /** Format: int64 */
    maxSize?: number;
    /** Format: int64 */
    minSize?: number;
    price?: number;
  };
  /** ReceiverDTO */
  ReceiverDTO: {
    /** @description 省市区加上地址详情 */
    addressCompleteAddress?: string;
    /**
     * Format: int64
     * @description 收货地址id
     */
    addressId?: number;
    /** @description 市编码 */
    cityCode?: string;
    /** @description 市名称 */
    cityName?: string;
    /**
     * Format: int64
     * @description 客户联系人ID
     */
    contactId?: number;
    /** @description 客户联系人NAME */
    contactName?: string;
    /** @description 客户联系人PHONE */
    contactPhone?: string;
    /** @description 国家编码 */
    countryCode: string;
    /** @description 国家名 */
    countryName?: string;
    /** @description 地址详情 */
    detail: string;
    /** @description 区编码 */
    districtCode?: string;
    /** @description 区名称 */
    districtName?: string;
    /** @description 门牌号 */
    houseNumber?: string;
    /** @description 收件人姓名 */
    name: string;
    /** @description 邮编 */
    postalCode?: string;
    /** @description 省编码 */
    provinceCode?: string;
    /** @description 省名称 */
    provinceName?: string;
    /** @description 街道编码 */
    streetCode?: string;
    /** @description 街道名称 */
    streetName?: string;
    /** @description 收件人电话 */
    tel: string;
  };
  /** ReviseOrderRequest */
  ReviseOrderRequest: {
    /** @description 申请人区域编码 */
    applyAreaCode?: string;
    /** @description 申请人区域名称 */
    applyAreaName?: string;
    /** @description 申请人国家编码 */
    applyCountryCode?: string;
    /** @description 申请人国家名称 */
    applyCountryName?: string;
    /** @description 下单批次号 必须为数字 */
    batchNo?: string;
    /** @description 业务扩展信息 */
    bizExtend?: { [key: string]: string };
    /**
     * Format: int32
     * @description 业务类型 1自营采销 2以销定采 默认1
     */
    bm?: number;
    /** Format: int64 */
    buyerId?: number;
    buyerName?: string;
    /** @description 是否货到付款 是-true 否-false */
    cashOnDelivery?: boolean;
    /** @description 是否检查库存 */
    checkStock?: boolean;
    /** @description 币种 */
    currency: string;
    /** @description 订单扩展信息 */
    extend?: definitions["订单扩展信息"];
    /** @description 是否开票 默认false */
    hasInvoice?: boolean;
    /** @description 发票信息 */
    invoice?: definitions["InvoiceCompany"];
    /** @description 是否修改卖家备注(true-是 false-否) */
    isUpdateRemark?: boolean;
    /** @description 语言 */
    language?: string;
    /**
     * Format: int64
     * @description 操作卖家id
     */
    operateSellerId?: number;
    /**
     * Format: int64
     * @description 操作人
     */
    operateUserId?: number;
    /**
     * Format: int64
     * @description 操作卖家id
     */
    operatorSellerId?: number;
    /**
     * Format: int64
     * @description 操作买家id
     */
    operatorUserId?: number;
    /**
     * Format: int32
     * @description 订单来源 OrderFromEnum
     */
    orderFrom?: number;
    /** @description 订单号 */
    orderNo: string;
    /** @description 付款类型 */
    paymentType?: string;
    /**
     * Format: int32
     * @description 所属平台：1:BGB 2:CRM 3:SCM
     */
    platformId?: number;
    /**
     * Format: int64
     * @description 运费金额（分）
     */
    postAmount?: number;
    /** @description 收件人 */
    receiver: definitions["ReceiverDTO"];
    /** @description 买家备注 */
    sellerWords?: string;
    /**
     * Format: int64
     * @description 买家id
     */
    shopId: number;
    /** @description 选购的SKU */
    skuOrderList: definitions["SkuRequest"][];
    /**
     * Format: int64
     * @description 特殊优惠（分）
     */
    specialDiscountAmount?: number;
    /** @description 仓库编码 */
    storeCode?: string;
    /**
     * Format: int64
     * @description 税费（分）
     */
    taxAmount?: number;
    /** @description 第三方订单号 */
    tpOrderNo?: string;
    /** @description 贸易方式：1 GN:国内贸易、2 KJ:跨境贸易、3 YB:一般贸易 */
    tradeMode?: string;
    /** @description 贸易术语 */
    tradeTerm?: string;
    /** @description 是否使用优惠券 是-true 否-false */
    useCoupon?: boolean;
    /** @description 是否使用 输入的SKU 价格 */
    useInputPrice?: boolean;
  };
  /** SellerBucLoginRequest */
  SellerBucLoginRequest: {
    /**
     * Format: int64
     * @description 外部系统用户ID
     */
    uicId?: number;
  };
  /** SellerOrderBasicDTO */
  SellerOrderBasicDTO: {
    /** @description 订单具备的可执行动作 */
    actions?: definitions["Nodes"];
    /** @description 申请地区编码 */
    applyAreaCode?: string;
    /** @description 申请地区名称 */
    applyAreaName?: string;
    /** @description 申请国家编码 */
    applyCountryCode?: string;
    /** @description 申请国家名称 */
    applyCountryName?: string;
    /** @description 是否有进行中的bca订单 */
    bcaDoing?: boolean;
    bizExtend?: { [key: string]: string };
    buyerName?: string;
    /** @description 买家备注 */
    buyerWords?: string;
    /** @description 是否货到付款 是-true 否-false */
    cashOnDelivery?: boolean;
    /** @description 优惠券优惠金额 */
    couponDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /** @description 币种 */
    currency?: string;
    /** @description 抵扣退款金额 */
    deductionRefundAmountMoney?: definitions["Money"];
    /** @description 店铺是否启用SCM */
    enSCM?: boolean;
    /**
     * Format: int64
     * @description 订单过期时间
     */
    esTime?: number;
    /**
     * Format: int64
     * @description 商品金额（分）
     */
    goodsAmount?: number;
    goodsAmountYuan?: string;
    /** @description 是否能换开 */
    hasChangeInvoice?: boolean;
    hasConfirmPay?: boolean;
    /** @description 是否开票 */
    hasInvoice?: boolean;
    /** @description 是否展示申请开票 */
    hasShowInvoice?: boolean;
    /**
     * Format: int64
     * @description 订单金额（分）
     */
    orderAmount?: number;
    orderAmountYuan?: string;
    /**
     * Format: int32
     * @description 开票状态
     */
    orderInvoiceStatus?: number;
    /** @description 开票状态描述 */
    orderInvoiceStatusDesc?: string;
    /** @description 订单编号 */
    orderNo?: string;
    /** @description 订单状态 */
    orderStatus?: string;
    /** @description 订单状态（说明） */
    orderStatusDesc?: string;
    /**
     * Format: int32
     * @description 订单原始状态
     */
    originalOrderStatus?: number;
    /** @description 套餐优惠金额 */
    packageDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 支付金额（分）
     */
    payAmount?: number;
    payAmountYuan?: string;
    /** @description 支付状态 */
    payStatus?: string;
    /** @description 支付状态（说明） */
    payStatusDesc?: string;
    /**
     * Format: int64
     * @description 应付金额（分）
     */
    paymentAmount?: number;
    paymentAmountYuan?: string;
    /** @description 付款类型 */
    paymentType?: string;
    /** @description 积分抵扣金额 */
    pointDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 运费金额（分）
     */
    postAmount?: number;
    postAmountYuan?: string;
    /**
     * Format: int64
     * @description 平台优惠金额（分）
     */
    promotionPlatformAmount?: number;
    promotionPlatformAmountYuan?: string;
    /**
     * Format: int64
     * @description 店铺优惠金额（分）
     */
    promotionShopAmount?: number;
    promotionShopAmountYuan?: string;
    /** @description 收货地址信息 */
    receiver?: definitions["ReceiverDTO"];
    /**
     * Format: int64
     * @description 卖家id
     */
    sellerId?: number;
    sellerWords?: string;
    /** @description 发货地 */
    shipCountryCode?: string;
    /**
     * Format: int64
     * @description 店铺id
     */
    shopId?: number;
    /** @description 店铺名称 */
    shopName?: string;
    /** @description 关联sku */
    skuOrderList?: definitions["订单SKU扩展参数"][];
    /**
     * Format: int64
     * @description 商品总数量（sku总数量）
     */
    skuTotalNum?: number;
    /** @description 特殊优惠金额 */
    specialDiscountAmount?: definitions["Money"];
    /** @description 限时促销优惠金额 */
    timeLimitDiscountAmount?: definitions["Money"];
    totalVolume?: number;
    totalWeight?: number;
    /** @description 贸易术语 */
    tradeTerm?: string;
    /** @description 用户积分获取详情 */
    userPointAcquire?: definitions["UserPointAcquireDTO"];
    /** @description 用户积分使用详情 */
    userPointApply?: definitions["UserPointApplyDTO"];
    /** @description 待付金额 */
    waitPaymentAmountMoney?: definitions["Money"];
  };
  /**
   * SellerResponse
   * @description 卖家对象
   */
  SellerResponse: {
    /** @description 授权状态 */
    authState?: string;
    /**
     * Format: int64
     * @description 授权id 通过后 有
     */
    bucLoginId?: number;
    /**
     * Format: int64
     * @description 开通时间
     */
    createTime?: number;
    /** @description 是否启用scm 1 启用 0 不启用 */
    isScm?: string;
    /**
     * Format: int64
     * @description 卖家名称
     */
    sellerId?: number;
    /** @description 卖家名称 */
    sellerName?: string;
    /** @description 卖家类型 1：品牌供应商 2：自营卖家 */
    sellerType?: string;
    /**
     * Format: int64
     * @description 外部系统用户ID 通过后 有
     */
    uicId?: number;
  };
  /**
   * SellerShopResponse
   * @description 卖家店铺对象
   */
  SellerShopResponse: {
    /**
     * Format: int64
     * @description 店铺id
     */
    shopId?: number;
    /** @description 店铺名称 */
    shopName?: string;
  };
  /** ShopExtend */
  ShopExtend: {
    /** @description accessToken 授权token */
    accessToken?: string;
    /** @description appKey */
    appKey?: string;
    /** @description TIKTOK 必传 */
    appSecret?: string;
    /** @description 授权失败code */
    authErrCode?: string;
    /** @description 授权失败原因 */
    authErrMsg?: string;
    /**
     * Format: int32
     * @description 授权状态
     */
    authStatus?: number;
    /** @description 邮箱 */
    email?: string;
    /** @description SHOPIFY 必传 */
    password?: string;
    /** @description 刷新授权token */
    refreshToken?: string;
    /** @description 备注 */
    remark?: string;
    /** @description 店铺类型 */
    shopType?: string;
    /** @description 数据来源 官方平台-1, 马帮平台-2 */
    source: string;
    /** @description 站点列表 */
    stationList?: string[];
    /** @description 门店地址 */
    storeUrl?: string;
    /** @description 子店铺信息 */
    subShopInfo?: definitions["SubShopInfo"][];
    /** @description 第三方 店铺 */
    thirdShopId?: string;
  };
  /** ShopPageListDTO */
  ShopPageListDTO: {
    /**
     * Format: int64
     * @description 分销店铺关联的授权店铺id
     */
    b2cDistributeShopAuthorizeShopId?: number;
    /**
     * Format: int64
     * @description 后台店铺ID
     */
    backendShopId?: number;
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /** @description 创建人 */
    creator?: string;
    /**
     * Format: int64
     * @description 创建人
     */
    creatorId?: number;
    /** @description 其他信息 拓展 */
    extend?: definitions["ShopExtend"];
    /** @description 平台 */
    platformCode?: string;
    /** @description 卖家id */
    sellerId?: string;
    /** @description 卖家名称 */
    sellerName?: string;
    /**
     * Format: int64
     * @description 门店id
     */
    shopId?: number;
    /** @description 门店名称 */
    shopName?: string;
    /** @description 站点 */
    stationCode?: string;
    /** @description 站点列表 */
    stationList?: string[];
    /**
     * Format: int32
     * @description 店铺状态 1 启用 2 禁用
     */
    status?: number;
    /** Format: int64 */
    userId?: number;
  };
  /** SipAffiShop */
  SipAffiShop: {
    /** @description access token */
    accessToken?: string;
    /** @description affiShopId */
    affiShopId?: string;
    /** @description refresh token */
    refreshToken?: string;
    /** @description 站点 */
    station?: string;
  };
  /** SkuInfoTransportResponse */
  SkuInfoTransportResponse: {
    /**
     * Format: float
     * @description 高
     */
    grossHeight?: number;
    /**
     * Format: float
     * @description 长
     */
    grossLength?: number;
    /**
     * Format: float
     * @description 重量
     */
    grossWeight?: number;
    /**
     * Format: float
     * @description 款
     */
    grossWidth?: number;
  };
  /** SkuQueryRequest */
  SkuQueryRequest: {
    currency?: string;
    /**
     * Format: int64
     * @description shopId
     */
    shopId?: number;
    skuCodes?: string;
  };
  /** SkuRequest */
  SkuRequest: {
    /** @description 购物车ID */
    cartId?: string;
    /**
     * Format: int32
     * @description 是否是组合商品
     */
    combinationType?: number;
    /**
     * Format: int64
     * @description cspuId
     */
    cspuId?: number;
    /** @description 组合商品sku属性 */
    placeOrderItemSkuCombinationProperties?: definitions["PlaceOrderLineCombinationSkuDTO"];
    /** @description 下单商品关联的商品列表 */
    placeOrderSubItemSkuList?: definitions["SkuRequest"][];
    /**
     * Format: int64
     * @description 运费(分)
     */
    postAmount?: number;
    /**
     * Format: int64
     * @description 商品ID
     */
    productId?: number;
    /**
     * Format: int64
     * @description 购买数量
     */
    quantity?: number;
    /** @description sku编码 */
    skuCode?: string;
    /**
     * Format: int64
     * @description 商品优惠金额(分)
     */
    skuCouponAmount?: number;
    /**
     * Format: int64
     * @description 商品使用优惠券id
     */
    skuCouponId?: number;
    /**
     * Format: int64
     * @description SKU ID
     */
    skuId?: number;
    /** @description 税率 四位小数 */
    taxRate?: number;
    /** @description 税率 百分比 */
    taxRatePercentage?: number;
    /**
     * Format: int64
     * @description 单价(分)
     */
    unitPrice?: number;
  };
  /** SkuSimpleResponse */
  SkuSimpleResponse: {
    currency?: string;
    isMixed?: boolean;
    mixRule?: definitions["QuerySkuWholesalePriceDTO"][];
    productCode?: string;
    /** Format: int64 */
    productId?: number;
    productName?: string;
    skuCode?: string;
    /** Format: int64 */
    skuId?: number;
    skuImgUrl?: string;
    skuName?: string;
    /**
     * Format: int32
     * @description SKU 状态
     */
    skuStatus?: number;
    /** Format: int64 */
    skuStock?: number;
    skuTransport?: definitions["SkuInfoTransportResponse"];
    unitPrice?: definitions["Money"];
    /** Format: float */
    volume?: number;
    volumeDesc?: string;
    /** Format: float */
    weight?: number;
    weightKg?: number;
  };
  /** StationDTO */
  StationDTO: {
    /** @description 国家简码 */
    countryCode?: string;
    /** @description 跨境 */
    cross?: boolean;
    /** @description 币种 */
    currency?: string;
    /** @description 本土 */
    local?: boolean;
    /** @description 站点code */
    platform?: string;
    /** @description 平台code */
    stationCode?: string;
  };
  /**
   * StoreItemPageRequest
   * @description 商品分页查询条件
   */
  StoreItemPageRequest: {
    /**
     * Format: int32
     * @description 商品状态 0-已发布、1 售卖中 、2-已下架
     */
    bbmallGloItemStatus?: number;
    /**
     * Format: int32
     * @description 当前页码，默认1
     */
    current?: number;
    /** @description 国际编码 */
    internationalCode?: string;
    /** @description 商品标题 */
    itemTitle?: string;
    /**
     * Format: int64
     * @description shopId
     */
    shopId?: number;
    /**
     * Format: int32
     * @description 请求数据量，默认10
     */
    size?: number;
    /** @description SKU编码 */
    skuCode?: string;
    /**
     * Format: int64
     * @description spuId
     */
    spuId?: number;
  };
  /**
   * StoreItemPageResponse
   * @description 店铺商品列表数据
   */
  StoreItemPageResponse: {
    /** @description 币种 */
    currency?: string;
    /** @description 发货国家/地区 */
    fromCountry?: string;
    /** @description 商品编码 */
    itemCode?: string;
    /**
     * Format: int64
     * @description 商品ID
     */
    itemId?: number;
    /** @description sku列表 */
    skuList?: definitions["StoreSkuResponse"][];
    /**
     * Format: int64
     * @description 产品ID
     */
    spuId?: number;
    /** @description spu主图 */
    spuImage?: string;
    /** @description 商品标题 */
    spuTitle?: string;
  };
  /** StoreSkuResponse */
  StoreSkuResponse: {
    /** @description 国际编码 */
    internationalCode?: string;
    /**
     * Format: int64
     * @description 商品id
     */
    itemId?: number;
    price?: definitions["Money"];
    /** @description sku编码 */
    skuCode?: string;
    /**
     * Format: int64
     * @description skuId
     */
    skuId?: number;
    /** @description sku图片 */
    skuImage?: string;
    /** @description sku数组属性 */
    skuPropertyNames?: string[];
    /**
     * Format: int32
     * @description sku状态 -1未就绪 0 已下架、1 已上架，2作废 3 正常
     */
    skuStatus?: number;
    /**
     * Format: int64
     * @description sku库存
     */
    skuStock?: number;
    /** @description sku名称 */
    skuTitle?: string;
    /** @description sku尺寸 */
    volumeDesc?: string;
  };
  /** SubShopInfo */
  SubShopInfo: {
    /** @description access token */
    accessToken?: string;
    /** @description refresh token */
    refreshToken?: string;
    /** @description 第三方店铺ID */
    shopId?: string;
    /** @description sip店铺列表 */
    sipAffiShops?: definitions["SipAffiShop"][];
    /** @description 站点 */
    station?: string;
  };
  /**
   * TradeTermListResponse
   * @description 贸易术语列表返回对象
   */
  TradeTermListResponse: {
    /** @description 贸易术语列表 */
    tradeTermList?: definitions["TradeTermResponse"][];
  };
  /**
   * TradeTermResponse
   * @description 贸易术语
   */
  TradeTermResponse: {
    /**
     * @description 关税说明
     * @example 进口清关由买方自行负责。请注意，进口费用（如有）应由买方支付并由当地海关确定。
     */
    dutyDescription?: string;
    /**
     * Format: int64
     * @description 最后更新时间
     * @example 123456789
     */
    lastUpdateTime?: number;
    /**
     * @description 语言
     * @example zh_CN
     */
    locale?: string;
    /**
     * @description 贸易说明
     * @example The seller is responsible for delivering the goods to the agreed-upon destination. The buyer is responsible for import clearance, duties, taxes (if applicable), and unloading of goods.
     */
    termDescription?: string;
    /**
     * @description 贸易术语
     * @example DAP
     */
    tradeTerm?: string;
  };
  /** UpdateReceiptRecordRequest */
  UpdateReceiptRecordRequest: {
    /** @description 收款银行信息 */
    bankAccountNo?: string;
    /** @description 买家姓名 */
    buyerName?: string;
    /**
     * Format: int64
     * @description 付款记录id
     */
    id: number;
    /** @description 语言 */
    language?: string;
    /** Format: int64 */
    operateUserId?: number;
    /**
     * Format: int64
     * @description 操作卖家id
     */
    operatorSellerId?: number;
    /**
     * Format: int64
     * @description 操作买家id
     */
    operatorUserId?: number;
    /**
     * Format: int64
     * @description 订单金额
     */
    orderAmount?: number;
    /** @description 订单号 */
    orderNo?: string;
    /**
     * Format: int64
     * @description 付款金额
     */
    payAmount?: number;
    /**
     * Format: int64
     * @description 付款日期
     */
    payTime?: number;
    /** @description 支付凭证 */
    paymentProof?: string;
    /**
     * Format: int32
     * @description 所属平台：1:BGB 2:CRM 3:SCM
     */
    platformId?: number;
    /**
     * Format: int64
     * @description 收款金额
     */
    receiptAmount?: number;
    /**
     * Format: int32
     * @description 支付方式
     */
    receiptMethod?: number;
    /** @description 付款流水号 */
    serialNumber?: string;
  };
  /** UserPointAcquireDTO */
  UserPointAcquireDTO: {
    /**
     * Format: int64
     * @description 用户可获得积分
     */
    acquirePoint?: number;
    /** @description 积分是否发放 true-是，false-否 */
    alreadyGrant?: boolean;
    /** @description 提示文案，未满足门槛时 */
    msg?: string;
    /** @description 是否可获取积分 */
    pointReceiveAble?: boolean;
    /** @description 商品 */
    skus?: definitions["PointAcquireSku"][];
    /**
     * Format: int64
     * @description 用户总积分
     */
    totalUserPoint?: number;
  };
  /** UserPointApplyDTO */
  UserPointApplyDTO: {
    /** @description 积分抵扣金额 */
    discountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 最高使用积分
     */
    maxPointNum?: number;
    /**
     * Format: int64
     * @description 最低使用积分
     */
    minPointNum?: number;
    /** @description 提示文案 */
    msg?: string;
    /** @description 是否可使用积分 */
    pointUsable?: boolean;
    /**
     * Format: int64
     * @description 当前使用积分数量
     */
    pointUseNum?: number;
    /**
     * Format: int64
     * @description 用户总积分
     */
    totalUserPoint?: number;
  };
  /**
   * 一级分类列表请求参数
   * @description 一级分类列表请求参数
   */
  一级分类列表请求参数: {
    /** @description 分类名称 */
    categoryName?: string;
    /** @description 添加人 */
    createIds?: string[];
    /** Format: int32 */
    current?: number;
    /**
     * Format: int64
     * @description 添加时间结束
     */
    endTime?: number;
    openPage?: boolean;
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    start?: number;
    /**
     * Format: int64
     * @description 添加时间开始
     */
    startTime?: number;
  };
  /**
   * 公司列表请求参数
   * @description 公司列表请求参数
   */
  公司列表请求参数: {
    /**
     * @description 公司主体名称
     * @example 1
     */
    corporationName?: string;
  };
  /** 初始化渠道类目Request */
  初始化渠道类目Request: {
    /** @description access_token */
    accessToken?: string;
    /** @description app_key */
    appKey: string;
    /** @description platform */
    platform: string;
    /** @description secret */
    secret: string;
    /**
     * Format: int64
     * @description shopId
     */
    shopId: number;
  };
  /** 删除属性绑定关系RequestDTO */
  删除属性绑定关系RequestDTO: {
    /** @description 平台code */
    platformCode?: string;
    /**
     * Format: int64
     * @description 渠道属性关联id
     */
    propertyRelationId?: number;
  };
  /**
   * 删除类目参数
   * @description 删除类目参数
   */
  删除类目参数: {
    /**
     * Format: int64
     * @description 类目id
     */
    categoryId?: number;
  };
  /** 删除类目绑定关系RequestDTO */
  删除类目绑定关系RequestDTO: {
    /**
     * Format: int64
     * @description 类目关联id
     */
    categoryRelationId?: number;
    /** @description 平台渠道 */
    platformCode?: string;
  };
  /**
   * 前台子类目列表返回
   * @description 前台子类目列表返回
   */
  前台子类目列表返回: {
    /**
     * @description 子类目列表
     * @example [
     *   1
     * ]
     */
    categoryFrontList?: definitions["前台类目返回"][];
    /**
     * @description 父级类目ids
     * @example [
     *   1
     * ]
     */
    parentIds?: number[];
  };
  /**
   * 前台类目返回
   * @description 前台类目返回
   */
  前台类目返回: {
    /** @description banner 图 */
    bannerUrl?: string;
    /**
     * @description 后台类目id
     * @example [
     *   1,
     *   2,
     *   3
     * ]
     */
    categoryBackendIds?: number[];
    /**
     * Format: int64
     * @description 类目id
     * @example 1
     */
    categoryId?: number;
    /**
     * @description 类目名称
     * @example 手机
     */
    categoryName?: string;
    /**
     * @description 类目英文名称
     * @example 手机
     */
    categoryNameEn?: string;
    /** @description 创建人 */
    createId?: string;
    /** @description 创建人名称 */
    createName?: string;
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /**
     * @description 类目图标
     * @example 类目图标
     */
    iconUrl?: string;
    /**
     * Format: int32
     * @description 是否为叶子节点，0非，1是
     */
    isLeaf?: number;
    /**
     * @description 层级
     * @example 1
     */
    level?: string;
    /**
     * @description 类目名称
     * @example 手机
     */
    parentCategoryName?: string;
    /**
     * @description 类目英文名称
     * @example 手机
     */
    parentCategoryNameEn?: string;
    /**
     * Format: int64
     * @description 父级类目id
     * @example 1
     */
    parentId?: number;
    /**
     * Format: int64
     * @description 关联后台类目数(叶子节点)
     */
    relationCategoryNum?: number;
    /**
     * Format: int64
     * @description 关联商品数(门店上架商品)
     */
    relationItemNum?: number;
  };
  /** 发货单 */
  发货单: {
    /** @description 声明发货类型 */
    declareShippingType?: string;
    /** @description 快递公司编码 */
    expressCompanyCode?: string;
    /** @description 快递公司名称 */
    expressCompanyName?: string;
    /** @description 履约主单ID */
    fulfillmentOrderId?: string;
    /**
     * Format: int64
     * @description 最后一次物流轨迹更新时间
     */
    lastTrackTime?: number;
    /** @description 物流单号 */
    logisticsNo?: string;
    /** @description 物流轨迹服务商 */
    logisticsTrackService?: string;
    /** @description 物流轨迹 */
    logisticsTracks?: definitions["物流轨迹"][];
    /** @description 发货单ID */
    shippingOrderId?: string;
    /**
     * Format: int64
     * @description 发货时间
     */
    shippingTime?: number;
    /**
     * Format: int64
     * @description 签收时间
     */
    signTime?: number;
    skuOrderList?: definitions["订单SKU扩展参数"][];
    /**
     * Format: int32
     * @description 发货单状态
     */
    status?: number;
    /** @description 运单号（快递单号） */
    trackingNo?: string;
    /**
     * Format: int64
     * @description 出库时间
     */
    warehouseOutboundTime?: number;
  };
  /**
   * 后台类目返回
   * @description 后台类目返回
   */
  后台类目返回: {
    /**
     * Format: int64
     * @description 类目id
     * @example 1
     */
    categoryId?: number;
    /**
     * @description 分类名称
     * @example 1
     */
    categoryName?: string;
    /**
     * @description 下级分类数据
     * @example 1
     */
    children?: definitions["后台类目返回"][];
    /**
     * @description 是否已绑定
     * @example true
     */
    disabled?: boolean;
    /**
     * @description 图标URL
     * @example 1
     */
    imageUrl?: string;
    /**
     * Format: int64
     * @description 分类id前端用于唯一key
     * @example 1
     */
    key?: number;
    /**
     * Format: int32
     * @description 级别
     * @example 1
     */
    level?: number;
    /**
     * @description 类目名称前端用
     * @example 1
     */
    title?: string;
    /**
     * Format: int64
     * @description 分类id前端用
     * @example 1
     */
    value?: number;
  };
  /**
   * 地区下拉返回参数
   * @description 地区下拉返回参数
   */
  地区下拉返回参数: {
    /**
     * Format: int64
     * @description 地址id
     */
    areaId?: number;
    /**
     * Format: int32
     * @description 级别
     */
    areaLevel?: number;
    /** @description 名称 */
    areaName?: string;
    /**
     * Format: int64
     * @description 国别id
     */
    countryId?: number;
    /**
     * Format: int32
     * @description 是否有下级，否0，是1
     */
    hasChildren?: number;
    /**
     * Format: int64
     * @description 父id
     */
    parentId?: number;
    /** @description 平台Id */
    platform?: string;
  };
  /** 增加属性绑定关系Request */
  增加属性绑定关系Request: {
    /**
     * Format: int64
     * @description 渠道内部类目id
     */
    channelCategoryId?: number;
    /**
     * Format: int64
     * @description 平台类目id
     */
    platformCategoryId?: number;
    /**
     * @description 平台渠道
     * @example tiktok
     */
    platformCode?: string;
  };
  /** 增加属性绑定关系RequestDTO */
  增加属性绑定关系RequestDTO: {
    /**
     * Format: int64
     * @description 渠道内部属性id
     */
    channelPropertyId?: number;
    /** @description 平台渠道 */
    platformCode?: string;
    /**
     * Format: int64
     * @description 平台属性id
     */
    platformPropertyId?: number;
  };
  /** 审批要素信息 */
  审批要素信息: {
    /** @description 渠道残次返利 */
    channelDefectReturnProfit?: string;
    /** @description 渠道采购返利 */
    channelPurReturnProfit?: string;
    /**
     * Format: int64
     * @description 客户要求送货日期
     */
    cusReqDeliveryDate?: number;
    /** @description 预估毛利 */
    expGrossProfit?: string;
    /** @description 预估毛利率 */
    expGrossProfitRate?: string;
    /** @description 预估亏损 */
    expLoss?: string;
    /**
     * Format: int64
     * @description 预计回款时间
     */
    expReturnCostDate?: number;
    /** @description 资金成本 */
    fundCost?: string;
    /** @description 商品成本 */
    goodsCost?: string;
    /** @description 物流成本 */
    logisticsCost?: string;
    /** @description 亏损原因 */
    lossReason?: string;
    /** @description 其他成本 */
    otherCost?: string;
    /** @description 客户已支付贷款的比例 */
    payedLoanRate?: string;
    /**
     * Format: int32
     * @description 账期
     */
    paymentDays?: number;
  };
  /**
   * 导入类目
   * @description 导入类目
   */
  导入类目: {
    /** @description 类目英文名称(一二三级) */
    en?: string;
    /** @description 类目中文名称(一级) */
    one?: string;
    /** @description 类目中文名称(三级) */
    three?: string;
    /** @description 类目中文名称(二级) */
    two?: string;
  };
  /** 店铺授权状态 */
  店铺授权状态: {
    /**
     * Format: int32
     * @description 状态名称code
     */
    code?: number;
    /** @description 状态名称 */
    name?: string;
  };
  /** 店铺状态 */
  店铺状态: {
    /**
     * Format: int32
     * @description 状态名称code
     */
    code?: number;
    /** @description 状态名称 */
    name?: string;
  };
  /** 授权状态 */
  授权状态: {
    /** @description 错误码code */
    code?: string;
    /** @description 错误码名称 */
    errorMsgText?: string;
  };
  /** 收款信息 */
  收款信息: {
    /** @description 尾款结算配置 */
    end?: definitions["结算配置"];
    /** @description 首款结算配置 */
    first?: definitions["结算配置"];
    /** @description 中间款结算配置 */
    middle?: definitions["结算配置"];
    /**
     * Format: int32
     * @description 结算次数 1 2 3
     */
    settleTimes?: number;
  };
  /** 文件信息表 */
  文件信息表: {
    /** @description 文件名称 */
    fileOriginName?: string;
    /**
     * Format: int64
     * @description 文件大小
     */
    fileSize?: number;
    /** @description 文件唯一名称 */
    fileStorageName?: string;
    /** @description 文件后缀 */
    fileSuffix?: string;
    /** @description 文件路径 */
    fileUrl?: string;
  };
  /**
   * 新增子类目参数
   * @description 新增子类目参数
   */
  新增子类目参数: {
    /** @description 后台类目id数组 没有则不传 */
    categoryBackendIds?: string[];
    /** @description 类目中文名称 */
    categoryName?: string;
    /** @description 类目英文名称 */
    categoryNameEn?: string;
    /** @description 类目图标 */
    iconUrl?: string;
    /**
     * Format: int64
     * @description 上级类目id 最上级传0
     */
    parentId?: number;
  };
  /**
   * 新增类目参数
   * @description 新增类目参数
   */
  新增类目参数: {
    /** @description banner 图 */
    bannerUrl?: string;
    /** @description 后台类目id数组 没有则不传 */
    categoryBackendIds?: string[];
    /**
     * Format: int64
     * @description 类目id
     */
    categoryId?: number;
    /** @description 类目中文名称 */
    categoryName?: string;
    /** @description 类目英文名称 */
    categoryNameEn?: string;
    /** @description 类目图标 */
    iconUrl?: string;
    /**
     * Format: int64
     * @description 上级类目id 最上级传0
     */
    parentId?: number;
  };
  /** 查询属性绑定关系RequestDTO */
  查询属性绑定关系RequestDTO: {
    /**
     * Format: int64
     * @description 创建人
     */
    creatorId?: number;
    /** Format: int32 */
    current?: number;
    /**
     * Format: int64
     * @description 结束时间
     */
    endTime?: number;
    /** Format: int32 */
    size?: number;
    /**
     * Format: int64
     * @description 平台属性id
     */
    sourcePropertyId?: number;
    /**
     * Format: int64
     * @description 开始时间
     */
    startTime?: number;
    /**
     * Format: int64
     * @description 渠道属性id
     */
    targetPropertyId?: number;
  };
  /** 查询类目绑定关系RequestDTO */
  查询类目绑定关系RequestDTO: {
    /**
     * Format: int64
     * @description 创建人
     */
    creatorId?: number;
    /** Format: int32 */
    current?: number;
    /**
     * Format: int64
     * @description 结束时间
     */
    endTime?: number;
    /** Format: int32 */
    size?: number;
    /**
     * Format: int64
     * @description 平台类目id
     */
    sourceCategoryId?: number;
    /**
     * Format: int64
     * @description 开始时间
     */
    startTime?: number;
    /**
     * Format: int64
     * @description 渠道类目id
     */
    targetCategoryId?: number;
  };
  /** 物流信息 */
  物流信息: {
    /**
     * Format: int64
     * @description 交货日期
     */
    deliveryDate?: number;
    /**
     * Format: int64
     * @description 预计发货日期
     */
    expShipDate?: number;
    /** @description 物流方式 */
    logisticsMode?: string;
    /**
     * Format: int32
     * @description 运费模板id
     */
    templateId?: number;
  };
  /** 物流轨迹 */
  物流轨迹: {
    /** @description 物流节点描述 */
    context?: string;
    /** @description 物流单号 */
    logisticsNo?: string;
    /** @description 物流轨迹ID */
    logisticsTrackId?: string;
    /** @description 地点 */
    place?: string;
    /** @description 备注 */
    remark?: string;
    /** @description 发货单ID */
    shippingOrderId?: string;
    /** @description 状态码 */
    status?: string;
    title?: string;
    /**
     * Format: int64
     * @description 物流轨迹发生时间
     */
    trackTime?: number;
    /** @description 运单号（快递单号） */
    trackingNo?: string;
  };
  /** 结算配置 */
  结算配置: {
    /**
     * Format: int32
     * @description 收款时间限制
     */
    dayLimit?: number;
    /**
     * Format: int64
     * @description 预计收款日期
     */
    estDate?: number;
    /** @description 收款条件: ShowOrder:见订单 BeforeShip:发货前 ShowReceipt:见签收单 */
    event?: string;
    /**
     * Format: int64
     * @description 付款金额（分）
     */
    payAmountCent?: number;
    /** @description 付款金额 */
    payAmountMoney?: definitions["Money"];
    /** @description 付款金额（元） */
    payAmountYuan?: string;
    /** @description 付款比例 */
    payRatio?: string;
  };
  /** 编辑属性绑定关系Request */
  编辑属性绑定关系Request: {
    /**
     * Format: int64
     * @description 渠道内部属性id
     */
    channelPropertyId?: number;
    /** @description 平台code */
    platformCode?: string;
    /**
     * Format: int64
     * @description 平台属性id
     */
    platformPropertyId?: number;
    /**
     * Format: int64
     * @description 属性关联关系主键id
     */
    propertyRelationId?: number;
  };
  /** 编辑类目绑定关系Request */
  编辑类目绑定关系Request: {
    /**
     * Format: int64
     * @description 主键id
     */
    categoryRelationId?: number;
    /**
     * Format: int64
     * @description 渠道内部类目id
     */
    channelCategoryId?: number;
    /**
     * Format: int64
     * @description 后台类目id
     */
    platformCategoryId?: number;
    /** @description 平台渠道 */
    platformCode?: string;
  };
  /** 订单SKU扩展参数 */
  订单SKU扩展参数: {
    /** @description 国际条码 */
    barcode?: string;
    /**
     * Format: int64
     * @description 品牌ID
     */
    brandId?: number;
    /** @description 品牌名 */
    brandName?: string;
    /** @description 转发货异常信息 */
    businessErrorMessage?: string;
    /**
     * Format: int32
     * @description 是否是组合商品
     */
    combinationType?: number;
    /**
     * Format: int64
     * @description CSPU ID
     */
    cspuId?: number;
    /** @description 币种 */
    currency?: string;
    discountDetail?: definitions["OrderPromotionDetailDto"][];
    /**
     * Format: int64
     * @description 优惠金额（分）
     */
    discountFee?: number;
    /** @description 优惠金额 */
    discountFeeMoney?: definitions["Money"];
    /** @description 国际条码 */
    internationalCode?: string;
    /**
     * Format: int64
     * @description itemId
     */
    itemId?: number;
    /** @description sku最低价 */
    lowestRetailPrice?: number;
    /** Format: int64 */
    newDiscountFee?: number;
    newDiscountFeeMoney?: definitions["Money"];
    /** @description 组合商品sku属性 */
    orderItemSkuCombinationProperties?: definitions["PlaceOrderLineCombinationSkuDTO"];
    /**
     * Format: int64
     * @description 子单id
     */
    orderLineId?: number;
    /** @description 积分抵扣金额 */
    pointDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 积分抵扣数量
     */
    pointUseNum?: number;
    /** @description 商品编码 */
    productCode?: string;
    /**
     * Format: int64
     * @description 商品ID
     */
    productId?: number;
    /** @description 商品名称 */
    productName?: string;
    /**
     * Format: int64
     * @description 优惠券id
     */
    promotionId?: number;
    /** Format: int64 */
    promotionPrice?: number;
    /**
     * Format: int64
     * @description sku促销价（组合商品、限时优惠等等）
     */
    promotionPriceCent?: number;
    /** @description sku促销价（组合商品、限时优惠等等） */
    promotionPriceMoney?: definitions["Money"];
    promotionPriceYuan?: string;
    /**
     * Format: int32
     * @description 促销活动类型  4-限时促销  6-套餐优惠
     */
    promotionType?: number;
    /**
     * Format: int64
     * @description 购买数量
     */
    quantity?: number;
    /** @description 相关报价单 */
    rfqNo?: string;
    /** @description 发货地国家编码 */
    shipCountryCode?: string;
    /** @description 发货地国家名称 */
    shipCountryName?: string;
    /** @description SKU 编码 */
    skuCode?: string;
    /**
     * Format: int64
     * @description SKU ID
     */
    skuId?: number;
    /** @description SKU 图片 */
    skuImgUrl?: string;
    /** @description SKU 名称 */
    skuName?: string;
    /** @description SKU 规格 */
    skuSpec?: string;
    /**
     * Format: int32
     * @description SKU 状态
     */
    skuStatus?: number;
    /**
     * Format: int64
     * @description SKU 库存
     */
    skuStock?: number;
    /**
     * Format: int64
     * @description SPU ID
     */
    spuId?: number;
    /** @description 下单商品关联的商品列表 */
    subOrderLineList?: definitions["订单SKU扩展参数"][];
    /** @description 税率四位小数 */
    taxRate?: number;
    /** @description 税率百分比 */
    taxRatePercentage?: number;
    /** @description 第三方SkuId */
    thirdSkuId?: string;
    totalAmountMoney?: definitions["Money"];
    totalAmountYuan?: string;
    /**
     * Format: int64
     * @description SKU 总价
     */
    totalPrice?: number;
    /** @description SKU 总价 */
    totalPriceMoney?: definitions["Money"];
    /**
     * Format: int64
     * @description SKU 单价
     */
    unitPrice?: number;
    /** @description SKU 单价 */
    unitPriceMoney?: definitions["Money"];
    unitPriceYuan?: string;
    volume?: number;
    /** @description 包装尺寸：长*宽*高 */
    volumeDesc?: string;
    /** @description 仓库code */
    warehouseCode?: string;
    /** @description 重量g */
    weight?: number;
    weightKg?: number;
  };
  /** 订单扩展信息 */
  订单扩展信息: {
    /** @description 附件 */
    annexFile?: string;
    /** @description 审批要素信息 */
    audit?: definitions["审批要素信息"];
    /** @description 合同信息 */
    contract?: definitions["收款信息"];
    /** @description 合同编码 */
    contractNo?: string;
    /** @description 财务核算信息 */
    finance?: definitions["财务核算信息"];
    /** @description 收款信息 */
    payment?: definitions["收款信息"];
    /** @description 运输信息 */
    transport?: definitions["物流信息"];
    /** @description 运输方式 1:海运, 2:陆运，3:空运, 4:铁运 */
    transportType?: string;
  };
  /** 订单扩展参数 */
  订单扩展参数: {
    /** @description 申请人区域编码 */
    applyAreaCode?: string;
    /** @description 申请人区域名称 */
    applyAreaName?: string;
    /** @description 申请人国家编码 */
    applyCountryCode?: string;
    /** @description 申请人国家名称 */
    applyCountryName?: string;
    /** @description 下单方式：自助下单、待客下单 */
    bizScene?: string;
    /** @description 业务类型 1自营采销 2以销定采 */
    bm?: string;
    /** @description 业务类型描述 2自营采销 1以销定采 */
    bmDesc?: string;
    /** @description 买家姓名 */
    buyerName?: string;
    /** @description 客户端：GBG SCM CRM BB */
    clientType?: string;
    /** @description 是否启动scm */
    enSCM?: boolean;
    /**
     * Format: int64
     * @description 订单过期时间
     */
    esTime?: number;
    /** @description 是否有发票 */
    hasInvoice?: boolean;
    /** @description 付款比例 */
    payRatio?: string;
    /** @description 付款类型：1先款后货 2分批付款 3先货后款 */
    paymentType?: string;
    /** @description 付款类型描述：1先款后货 2分批付款 3先货后款 */
    paymentTypeValue?: string;
    /** @description 卖家姓名 */
    sellerName?: string;
    /** @description 发货地国家编码 */
    shipCountryCode?: string;
    /**
     * Format: int64
     * @description 订单提交人
     */
    submitUserId?: number;
    /** @description 贸易方式：1 GN:国内贸易、2 KJ:跨境贸易、3 YB:一般贸易 */
    tradeMode?: string;
    /** @description 贸易术语 */
    tradeTerm?: string;
  };
  /** 订单详情 */
  订单详情: {
    /** @description 申请人区域编码 */
    applyAreaCode?: string;
    /** @description 申请人区域名称 */
    applyAreaName?: string;
    /** @description 申请人国家编码 */
    applyCountryCode?: string;
    /** @description 申请人国家名称 */
    applyCountryName?: string;
    /** @description 是否有进行中的bca订单 */
    bcaDoing?: boolean;
    /** @description 业务扩展参数 */
    bizExtend?: { [key: string]: string };
    /** @description 下单方式：自助下单、待客下单 */
    bizScene?: string;
    /**
     * Format: int32
     * @description 业务来源:BBMALL_GLOBAL
     */
    bizSource?: number;
    /** @description 业务类型 1自营采销 2以销定采 */
    bm?: string;
    /** @description 业务类型描述 2自营采销 1以销定采 */
    bmDesc?: string;
    /** @description 转发货异常编码 */
    businessErrorCode?: string;
    /** @description 转发货异常信息 */
    businessErrorMessage?: string;
    /**
     * Format: int64
     * @description 买家ID
     */
    buyerId?: number;
    /** @description 买家姓名 */
    buyerName?: string;
    /**
     * Format: int32
     * @description 买家类型 0:SMB ,1 :KA
     */
    buyerType?: number;
    /** @description 买家留言 */
    buyerWords?: string;
    /** @description 取消原因 */
    cancelReason?: string;
    /**
     * Format: int64
     * @description 取消时间
     */
    cancelTime?: number;
    /** @description 是否货到付款 是-true 否-false */
    cashOnDelivery?: boolean;
    channelOrderNo?: string;
    /**
     * Format: int32
     * @description 子状态
     */
    childStatus?: number;
    childStatusDesc?: string;
    /** @description 客户端：GBG SCM CRM BB */
    clientType?: string;
    /**
     * Format: int32
     * @description 是否是组合商品
     */
    combinationType?: number;
    /**
     * Format: int64
     * @description 确认收货时间
     */
    confirmReceiptTime?: number;
    /** @description 优惠券优惠金额 */
    couponDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 创建时间
     */
    createTime?: number;
    /**
     * Format: int32
     * @description 跨境交易类型 1.直邮代发 2.跨境保税 3.境外批采 4.境内代发 5.境内批采 默认直邮代发
     */
    crossTradeType?: number;
    /** @description 币种 */
    currency?: string;
    /**
     * Format: int32
     * @description 自定义状态
     */
    customOrderStatus?: number;
    /** @description 自定义状态描述 */
    customOrderStatusDesc?: string;
    /** @description 抵扣退款金额 */
    deductionRefundAmountMoney?: definitions["Money"];
    /** @description 店铺是否启用SCM */
    enSCM?: boolean;
    /**
     * Format: int64
     * @description 订单过期时间
     */
    esTime?: number;
    /** @description 物流商 */
    expressCompanyName?: string;
    /**
     * Format: int64
     * @description 完成时间
     */
    finishTime?: number;
    /** @description 履约单号 */
    fulfillmentOrderId?: string;
    /** Format: int32 */
    fulfillmentStatus?: number;
    fulfillmentStatusDesc?: string;
    /**
     * Format: int64
     * @description 商品金额（分）
     */
    goodsAmount?: number;
    /** @description 商品金额 */
    goodsAmountMoney?: definitions["Money"];
    goodsAmountYuan?: string;
    /** @description 能否换开 true 能 */
    hasChangeInvoice?: boolean;
    /** @description 是否含有付款待确认单 */
    hasConfirmPay?: boolean;
    /** @description 是否有发票 */
    hasInvoice?: boolean;
    /** @description 是否展示申请开票 */
    hasShowInvoice?: boolean;
    /** @description 是否转发货 */
    hasTransShipment?: boolean;
    /** @description 物流跟踪号（物流单号）列表 */
    logisticsNoList?: string[];
    /** @description ocp物流单号 */
    logisticsOrderId?: string;
    /**
     * Format: int64
     * @description 订单金额（分）
     */
    orderAmount?: number;
    /** @description 订单金额 */
    orderAmountMoney?: definitions["Money"];
    orderAmountYuan?: string;
    /** @description 业务场景 order表biz_scene字段 */
    orderBizScene?: string;
    /** @description 销售订单扩展信息 */
    orderExtend?: definitions["订单扩展信息"];
    /**
     * Format: int64
     * @description 订单Id
     */
    orderId?: number;
    /**
     * Format: int32
     * @description 开票状态
     */
    orderInvoiceStatus?: number;
    /** @description 开票状态描述 */
    orderInvoiceStatusDesc?: string;
    /** @description 订单号 */
    orderNo?: string;
    /** @description 订单所属平台 */
    orderPlatform?: string;
    /**
     * Format: int32
     * @description 订单状态
     */
    orderStatus?: number;
    orderStatusDesc?: string;
    /**
     * Format: int64
     * @description 下单时间
     */
    orderTime?: number;
    /**
     * Format: int32
     * @description 订单类型
     */
    orderType?: number;
    /** @description 外部单号 */
    outTradeNo?: string;
    /** @description 套餐优惠金额 */
    packageDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 支付金额（分）
     */
    payAmount?: number;
    /** @description 支付金额 */
    payAmountMoney?: definitions["Money"];
    payAmountYuan?: string;
    /** @description 付款比例 */
    payRatio?: string;
    /**
     * Format: int32
     * @description 付款状态
     */
    payStatus?: number;
    payStatusDesc?: string;
    /**
     * Format: int64
     * @description 付款时间
     */
    payTime?: number;
    /**
     * Format: int64
     * @description 应付金额（分）
     */
    paymentAmount?: number;
    /** @description 应付金额 */
    paymentAmountMoney?: definitions["Money"];
    paymentAmountYuan?: string;
    /** @description 付款类型：1先款后货 2分批付款 3先货后款 */
    paymentType?: string;
    /** @description 付款类型描述：1先款后货 2分批付款 3先货后款 */
    paymentTypeValue?: string;
    /** @description 积分抵扣金额 */
    pointDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 运费金额（分）
     */
    postAmount?: number;
    /** @description 运费金额 */
    postAmountMoney?: definitions["Money"];
    postAmountYuan?: string;
    /**
     * Format: int64
     * @description 平台优惠金额（分）
     */
    promotionPlatformAmount?: number;
    /** @description 平台优惠金额 */
    promotionPlatformAmountMoney?: definitions["Money"];
    promotionPlatformAmountYuan?: string;
    /**
     * Format: int64
     * @description 店铺优惠金额（分）
     */
    promotionShopAmount?: number;
    /** @description 店铺优惠金额 */
    promotionShopAmountMoney?: definitions["Money"];
    promotionShopAmountYuan?: string;
    /** @description 收件人 */
    receiver?: definitions["ReceiverDTO"];
    /**
     * Format: int32
     * @description 售后状态
     */
    refundStatus?: number;
    /** Format: int32 */
    refundStatusDesc?: number;
    /**
     * Format: int64
     * @description 卖家ID
     */
    sellerId?: number;
    /** @description 卖家姓名 */
    sellerName?: string;
    /** @description 卖家备注 */
    sellerWords?: string;
    /** @description 发货地国家编码 */
    shipCountryCode?: string;
    /**
     * Format: int64
     * @description 发货时间
     */
    shipTime?: number;
    /**
     * Format: int64
     * @description 店铺ID
     */
    shopId?: number;
    /** @description 店铺名称 */
    shopName?: string;
    /** @description 关联SKU */
    skuOrderList?: definitions["订单SKU扩展参数"][];
    /** Format: int64 */
    skuTotalNum?: number;
    /** @description 特殊优惠金额 */
    specialDiscountAmount?: definitions["Money"];
    /**
     * Format: int64
     * @description 订单提交人
     */
    submitUserId?: number;
    /** @description 订单标 */
    tagList?: string[];
    /**
     * Format: int64
     * @description 税费（分）
     */
    taxAmount?: number;
    /** @description 税费 */
    taxAmountMoney?: definitions["Money"];
    /** @description 限时促销优惠金额 */
    timeLimitDiscountAmount?: definitions["Money"];
    /** @description 总体积 */
    totalVolume?: number;
    /** @description 总重量（g） */
    totalWeight?: number;
    totalWeightKg?: number;
    /** @description 贸易方式：1 GN:国内贸易、2 KJ:跨境贸易、3 YB:一般贸易 */
    tradeMode?: string;
    /** @description 来源平台 */
    tradePlatform?: string;
    /** @description 贸易术语 */
    tradeTerm?: string;
    /** @description 转发货按钮 */
    transhipmentSwitch?: boolean;
    /**
     * Format: int64
     * @description 修改时间
     */
    updateTime?: number;
    /** @description 用户积分获取详情 */
    userPointAcquire?: definitions["UserPointAcquireDTO"];
    /** @description 用户积分使用详情 */
    userPointApply?: definitions["UserPointApplyDTO"];
    /**
     * Format: int64
     * @description 应付金额（分）
     */
    waitPaymentAmount?: number;
    /** @description 待付金额 */
    waitPaymentAmountMoney?: definitions["Money"];
    waitPaymentAmountYuan?: string;
    /** @description 仓库名称 */
    warehouseName?: string;
    /**
     * Format: int64
     * @description 出库时间
     */
    warehouseOutboundTime?: number;
  };
  /** 财务核算信息 */
  财务核算信息: {
    /** @description 附件 */
    attachment?: string;
    /** @description 财务核算批次号 */
    calcBatch?: string;
    /** @description 系统测算粗毛利 */
    calcGrossProfit?: string;
    /** @description 币种 */
    currency?: string;
    /** @description 预估粗毛利 */
    expGrossProfit?: string;
    /** @description 预估粗毛利率 */
    expGrossProfitRate?: string;
    /** @description 物流成本 */
    logisticsCost?: string;
    /** @description 商品出库批次 */
    outDepotBatch?: string;
    /** @description 采购额度 */
    purQuota?: string;
    /** @description 人民币汇率 */
    rmbRate?: string;
    /** @description 美元汇率 */
    usdRate?: string;
  };
  /**
   * 运营BB店铺列表详情返回
   * @description 运营BB店铺列表详情返回
   */
  运营BB店铺列表详情返回: {
    /**
     * Format: int64
     * @description 开店日期
     */
    createTime?: number;
    /**
     * Format: int64
     * @description 店铺id
     */
    id?: number;
    /** @description 店铺名称 */
    name?: string;
    /** @description 站点 */
    platform?: string;
    /** @description 卖家企业名称 */
    sellerEnterpriseName?: string;
    /** @description 店铺编号 */
    shopCode?: string;
  };
  /**
   * 运营BB店铺列表请求参数
   * @description 运营BB店铺列表请求参数
   */
  运营BB店铺列表请求参数: {
    /** Format: int32 */
    current?: number;
    /** @description 店铺名称 */
    name?: string;
    openPage?: boolean;
    /** @description 站点 */
    platform?: string;
    /** @description 卖家企业名称 */
    sellerEnterpriseName?: string;
    /** Format: int32 */
    size?: number;
    /** Format: int32 */
    start?: number;
  };
}

export interface operations {
  addUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["新增类目参数"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  addChildUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["新增子类目参数"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  backendListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«后台类目返回»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  childrenUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** 父级类目id */
        parentId: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«前台子类目列表返回»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  creatorListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«CreatorsResponse»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  addUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["删除类目参数"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  editUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["新增类目参数"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  initFrontCategoryByRelationUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  initImportUsingPOST: {
    parameters: {
      body: {
        /** list */
        list: definitions["导入类目"][];
      };
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  oneLevelListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** param */
        param: definitions["一级分类列表请求参数"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«前台类目返回»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getCreatorsUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«CreatorsResponse»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  pageListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["QueryShopRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«ChannelShopPageListResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  sellerListSelectUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«EnumResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  shopListSelectUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«EnumResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  pageListUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["QueryClienteleRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«ClienteleResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getCreatorsUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«CreatorsResponse»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  corporationListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["公司列表请求参数"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«CorporationListResponse»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryDivisionInfoUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** queryDivisionRequest */
        queryDivisionRequest: definitions["QueryDivisionRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«地区下拉返回参数»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  uploadUsingPOST: {
    parameters: {
      formData: {
        /** file */
        file: unknown;
      };
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«文件信息表»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  statisticsBoardUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«string»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getSkuByCodesUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["SkuQueryRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«SkuSimpleResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  pageStoreItemUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["StoreItemPageRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«StoreItemPageResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  addCategoryBindingUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["增加属性绑定关系Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  addPropertyBindingUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["增加属性绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  categoryBindingPageListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["查询类目绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«QueryCategoryBindingListResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteCategoryBindingByIdUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["删除类目绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deletePropertyBindingByIdUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["删除属性绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  initCategoryUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["初始化渠道类目Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  initCategoryPropertyUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["初始化渠道类目Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  propertyBindingPageListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["查询属性绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«QueryPropertyBindingListResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryCategoryCreatorListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryMultiUserInfoResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryChannelCategoryUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryChannelPropertyListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelPropertyResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedChannelCategoryUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedChannelPropertyUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelPropertyResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedPlatformCategoryUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedPlatformPropertyUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformPropertyResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPlatformCategoryUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPlatformCategoryByTargetCatrgoryIdUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["QueryExistRelatedCategoryRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformCategoryResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPlatformPropertyListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformPropertyResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPropertyCreatorListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryMultiUserInfoResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateCategoryBindingUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["编辑类目绑定关系Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updatePropertyBindingUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["编辑属性绑定关系Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  platformCodeListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«string»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  publishShopListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** platformCode */
        platformCode: string;
        /** stationCode */
        stationCode?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«ShopPageListDTO»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  shopAuthStatusListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«店铺授权状态»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  shopPublishErrorCodeListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«授权状态»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  shopStatusListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«店铺状态»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  stationListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«StationDTO»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  addCategoryBindingUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["增加属性绑定关系Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  addPropertyBindingUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["增加属性绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  categoryBindingPageListUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["查询类目绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«QueryCategoryBindingListResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteCategoryBindingByIdUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["删除类目绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deletePropertyBindingByIdUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["删除属性绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  propertyBindingPageListUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["查询属性绑定关系RequestDTO"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«QueryPropertyBindingListResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryCategoryCreatorListUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryMultiUserInfoResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryChannelCategoryUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryChannelPropertyListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelPropertyResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedChannelCategoryUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedChannelPropertyUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryChannelPropertyResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedPlatformCategoryUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryExistRelatedPlatformPropertyUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformPropertyResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPlatformCategoryUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformCategoryResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPlatformCategoryByTargetCatrgoryIdUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["QueryExistRelatedCategoryRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformCategoryResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPlatformPropertyListUsingGET_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryPlatformPropertyResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryPropertyCreatorListUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«QueryMultiUserInfoResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateCategoryBindingUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["编辑类目绑定关系Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updatePropertyBindingUsingPOST_1: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["编辑属性绑定关系Request"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  readPlatformHtmlUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  forPageUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["OfflineConsultationPageSellerRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«OfflineConsultationSellerResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateStatusUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["OfflineConsultationUpdateStatusRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«long»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getOperationApprovalShopDetailByIdUsingGET: {
    parameters: {
      query: {
        /** id */
        id: number;
      };
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«OperationGlobalShopApprovalDetailResponse»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getOperationShopDetailByIdUsingGET: {
    parameters: {
      query: {
        /** id */
        id: number;
      };
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«OperationGlobalShopApprovalDetailResponse»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  operationApprovalShopPageListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["OperationGlobalShopPageRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«OperationGlobalShopPageResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  operationShopCloseUsingGET: {
    parameters: {
      query: {
        /** id */
        id: number;
      };
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  operationShopEnableUsingGET: {
    parameters: {
      query: {
        /** id */
        id: number;
      };
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  operationShopPageListUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["OperationGlobalShopPageRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«OperationGlobalShopPageResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  platformsUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«BB店铺站点列表返回»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  operationBBShopsUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["运营BB店铺列表请求参数"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«运营BB店铺列表详情返回»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateApprovalStatusUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["OperationGlobalShopApprovalRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryCurrenciesUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteOrderUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** req */
        req: definitions["DeleteOrderRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryOrderDetailUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** orderNo */
        orderNo: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["SellerOrderBasicDTO"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryOrderExtendUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** orderNo */
        orderNo: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["订单扩展信息"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  forceCancelOrderUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** req */
        req: definitions["ForceCancelOrderRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryOrderInvoiceUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** orderNo */
        orderNo: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["OrderInvoiceDTO"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryOrderReceiptListUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** orderNo */
        orderNo: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«OrderReceiptRecordResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryOrderOperateLogUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** orderNo */
        orderNo: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["OrderOperateLogDTO"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryOrderPageUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["OrderPageRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["订单详情"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryNewOrderUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** req */
        req: definitions["OrderPageRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  reviseOrderUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** req */
        req: definitions["ReviseOrderRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  shippingInfoUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** orderNo */
        orderNo: string;
        /** shopId */
        shopId: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«发货单»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryStatusStatisticsUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: unknown };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateOrderFeatureUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** req */
        req: definitions["OrderFeaturesCmdRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateReceiptRecordUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** req */
        req: definitions["UpdateReceiptRecordRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  abolishSellAuthUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["AbolishSellAuthRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  applySellAuthUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["ApplyAuthRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  bucLoginUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["SellerBucLoginRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  cancelledSellerAuthUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["AbolishSellAuthRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getAuthStatusUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«EnumResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  pageListUsingPOST_2: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["QuerySellRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PageResponse«SellerResponse»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryShopListBySellerIdUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** sellerId */
        sellerId: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«List«SellerShopResponse»»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getTradeTermUsingGET: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      query: {
        /** tradeTerm */
        tradeTerm?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«TradeTermResponse»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  listTradeTermsUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«TradeTermListResponse»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryCustomerByAccountUsingPOST: {
    parameters: {
      header: {
        /** 语言类型 */
        locale?: string;
        /** token */
        token?: string;
      };
      body: {
        /** request */
        request: definitions["CustomerAccountRequest"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ApiResult«PlatformCustomerResponse»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
